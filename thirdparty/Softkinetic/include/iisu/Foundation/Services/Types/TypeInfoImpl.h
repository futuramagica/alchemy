
#pragma once

#include <Foundation/Services/Types/TypeInfoDefinition.h>
#include <Foundation/DataTypes/String/String.h>
#include <Platform/SkPlatform.h>

#include <Foundation/Services/Events/EventEnum.h>
#include <Foundation/Services/Commands/BackgroundSnapshotType.h>	

#include <Foundation/DataTypes/Geometry/Vector2.h>
#include <Foundation/DataTypes/Geometry/Vector2i.h>
#include <Foundation/DataTypes/Geometry/Frame.h>

#include <iostream>
#include <memory>


namespace SK
{
	
			
  class ActivationGestureEvent;
class Attributes;
class BackgroundSnapshotResultEvent;
class CalibrationResultEvent;
class CameraDeocclusionEvent;
class CameraOcclusionEvent;
class CircleGestureEvent;
class ClickGestureEvent;
class Color4c;
class Color4f;
class ControllerCreationEvent;
class ControllerDestructionEvent;
class DataFrameEvent;
class Error;
class ErrorEvent;
class GenericEvent;
class Frame;
class FunctionTypeInfo;
class GestureEvent;
class Image;
class Matrix3;
class Matrix4;
class NumberGestureEvent;
class Quaternion;
class RawData;
class StatusEvent;
class SwipeGestureEvent;
class UserActivatedEvent;
class UserDataListUpdatedEvent;
class UserDeactivatedEvent;
class UsersStartTouchingEvent;
class UsersStopTouchingEvent;
class UserStartsMovingEvent;
class UserStopsMovingEvent;
class UserTransferedEvent;
class Vector2;
class Vector2i;
class Vector3;
class Vector3i;
class Vector4;
class Vertex;
class WaveGestureEvent;
struct Enum;
struct EnumMapper;
struct ImageInfos;
struct ImageSizer;
template <typename T> class Array;
template <typename T> class Return;
typedef Return<void> Result;
class ParameterChangedEvent;
class HandPosingGestureEvent;
class HandActivatedEvent;
class HandDeactivatedEvent;
class HandMovingGestureEvent;
class CalibrationFailureEvent;


  template <typename T> class MetaInfo;
  
  namespace {template<typename T> struct Type;}
  
  namespace details {using SK::Type;}
  
  #define SK_TYPE_DEFINITION \
  	template<uint32_t N> \
  	struct enumerator {static const uint32_t value=N; typedef enumerator<N+1> next;};\
  
  #define SK_TYPE_DEF(X) \
  	typedef enumerator< X##_ID > X##_T
  
  #define SK_TYPE_ID(TYPE, X, NAME, INFOS) \
  template<> const TypeInfo Type< TYPE >::INFO = TypeInfo(TypeInfo::X##_T(),NAME,INFOS);
  
  #define IISU_TYPE_ID(TYPE, X, NAME, INFOS) \
  template<> const TypeInfo Type< TYPE >::INFO = TypeInfo(TypeInfo::X##_T(),NAME,INFOS);\
  template<> const bool Type< TYPE >::IISU_DATA_TYPE = true
  
  #define SK_TYPE_INJECT(X, NAME) \
  	case SK::NAME##_ID: return (std::auto_ptr<TypelessInterface>)std::auto_ptr<TypedImplementation< X > >(new TypedImplementation< X >())
  
  #define SK_TYPE_ID_SWITCH_CASE(X, NAME) \
  	case SK::NAME##_ID: return SK::Type< X >::INFO
  	
  namespace TypeInfoCharacteristic
	{

		/**
		 * \enum Type
		 *
		 * \brief	Characteristic a TypeInfo can have.
		 */
		 
		enum Type
		{
			///< base type. 
			NONE            = 1,
			///< const reference. 
			IS_CONST_REF    = 2,
			///< MetaInfo class type. 
			IS_METAINFO     = 4,
			///< Event class type. 
			IS_EVENT        = 8,
			///< iisu data/parameter type. 
			IS_IISU_DATA    = 16,
			///< Serializable type. 
			IS_SERIALIZABLE = 32,
			///< Array type. 
			IS_ARRAY        = 64,			
		};
	}

	/**
	 * \class TypeInfo
	 *
	 * \brief	Describe a type manipulated in iisu.
	 */

	class IISUSDK_API TypeInfo
	{
		template<typename T>
		friend struct SK::details::Type;
	public:
		typedef uint32_t innerType_t;

	private:
		SK_TYPE_DEFINITION	

	private:
		typedef TypeInfo self_t;

	public:

		/**
		 * \fn TypeInfo()
		 *
		 * \brief	Default Constructor, create the TypeInfo of a SK::UnknownType.
		 */

		TypeInfo();

		/**
		 * \fn template<uint32_t N> TypeInfo( const enumerator<N>&, const char* name, TypeInfoCharacteristic::Type characteristics=TypeInfoCharacteristic::NONE)
		 *
		 * \brief	This constructor is used by the Type class. You should never use this constructor directly.
		 */

		template<uint32_t N>
		TypeInfo( const enumerator<N>&, const char* name, TypeInfoCharacteristic::Type characteristics=TypeInfoCharacteristic::NONE) :m_typeID(N), m_name(name), m_characteristics(characteristics){}

	public:
		~TypeInfo();

	private:
			SK_TYPE_DEF(VOID_TYPE);
			SK_TYPE_DEF(UNKNOWN_TYPE);
			SK_TYPE_DEF(INTERNAL_TYPE);
			SK_TYPE_DEF(UNKNOWN_TYPE_METAINFO);
			SK_TYPE_DEF(INTERNAL_TYPE_METAINFO);
			SK_TYPE_DEF(FUNCTION_UNKNOWN_TYPE_METAINFO);
			SK_TYPE_DEF(FUNCTION_INTERNAL_TYPE_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_STRING_METAINFO);
			SK_TYPE_DEF(ATTRIBUTES);
			SK_TYPE_DEF(ATTRIBUTES_CONST_REF);
			SK_TYPE_DEF(ATTRIBUTES_ARRAY);
			SK_TYPE_DEF(ATTRIBUTES_ARRAY_CONST_REF);
			SK_TYPE_DEF(ATTRIBUTES_METAINFO);
			SK_TYPE_DEF(ATTRIBUTES_CONST_REF_METAINFO);
			SK_TYPE_DEF(ATTRIBUTES_ARRAY_METAINFO);
			SK_TYPE_DEF(ATTRIBUTES_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(ENUMMAPPER);
			SK_TYPE_DEF(ENUMMAPPER_CONST_REF);
			SK_TYPE_DEF(ENUMMAPPER_ARRAY);
			SK_TYPE_DEF(ENUMMAPPER_ARRAY_CONST_REF);
			SK_TYPE_DEF(ENUMMAPPER_METAINFO);
			SK_TYPE_DEF(ENUMMAPPER_CONST_REF_METAINFO);
			SK_TYPE_DEF(ENUMMAPPER_ARRAY_METAINFO);
			SK_TYPE_DEF(ENUMMAPPER_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(ERROR);
			SK_TYPE_DEF(ERROR_CONST_REF);
			SK_TYPE_DEF(ERROR_ARRAY);
			SK_TYPE_DEF(ERROR_ARRAY_CONST_REF);
			SK_TYPE_DEF(ERROR_METAINFO);
			SK_TYPE_DEF(ERROR_CONST_REF_METAINFO);
			SK_TYPE_DEF(ERROR_ARRAY_METAINFO);
			SK_TYPE_DEF(ERROR_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(FUNCTIONTYPEINFO);
			SK_TYPE_DEF(FUNCTIONTYPEINFO_CONST_REF);
			SK_TYPE_DEF(FUNCTIONTYPEINFO_ARRAY);
			SK_TYPE_DEF(FUNCTIONTYPEINFO_ARRAY_CONST_REF);
			SK_TYPE_DEF(FUNCTIONTYPEINFO_METAINFO);
			SK_TYPE_DEF(FUNCTIONTYPEINFO_CONST_REF_METAINFO);
			SK_TYPE_DEF(FUNCTIONTYPEINFO_ARRAY_METAINFO);
			SK_TYPE_DEF(FUNCTIONTYPEINFO_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(IMAGEINFOS);
			SK_TYPE_DEF(IMAGEINFOS_CONST_REF);
			SK_TYPE_DEF(IMAGEINFOS_ARRAY);
			SK_TYPE_DEF(IMAGEINFOS_ARRAY_CONST_REF);
			SK_TYPE_DEF(IMAGEINFOS_METAINFO);
			SK_TYPE_DEF(IMAGEINFOS_CONST_REF_METAINFO);
			SK_TYPE_DEF(IMAGEINFOS_ARRAY_METAINFO);
			SK_TYPE_DEF(IMAGEINFOS_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(IMAGESIZER);
			SK_TYPE_DEF(IMAGESIZER_CONST_REF);
			SK_TYPE_DEF(IMAGESIZER_ARRAY);
			SK_TYPE_DEF(IMAGESIZER_ARRAY_CONST_REF);
			SK_TYPE_DEF(IMAGESIZER_METAINFO);
			SK_TYPE_DEF(IMAGESIZER_CONST_REF_METAINFO);
			SK_TYPE_DEF(IMAGESIZER_ARRAY_METAINFO);
			SK_TYPE_DEF(IMAGESIZER_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(RAWDATA);
			SK_TYPE_DEF(RAWDATA_CONST_REF);
			SK_TYPE_DEF(RAWDATA_ARRAY);
			SK_TYPE_DEF(RAWDATA_ARRAY_CONST_REF);
			SK_TYPE_DEF(RAWDATA_METAINFO);
			SK_TYPE_DEF(RAWDATA_CONST_REF_METAINFO);
			SK_TYPE_DEF(RAWDATA_ARRAY_METAINFO);
			SK_TYPE_DEF(RAWDATA_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(RESULT);
			SK_TYPE_DEF(RESULT_CONST_REF);
			SK_TYPE_DEF(RESULT_ARRAY);
			SK_TYPE_DEF(RESULT_ARRAY_CONST_REF);
			SK_TYPE_DEF(RESULT_METAINFO);
			SK_TYPE_DEF(RESULT_CONST_REF_METAINFO);
			SK_TYPE_DEF(RESULT_ARRAY_METAINFO);
			SK_TYPE_DEF(RESULT_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(RETURNARRAYSTRING);
			SK_TYPE_DEF(RETURNARRAYSTRING_CONST_REF);
			SK_TYPE_DEF(RETURNARRAYSTRING_ARRAY);
			SK_TYPE_DEF(RETURNARRAYSTRING_ARRAY_CONST_REF);
			SK_TYPE_DEF(RETURNARRAYSTRING_METAINFO);
			SK_TYPE_DEF(RETURNARRAYSTRING_CONST_REF_METAINFO);
			SK_TYPE_DEF(RETURNARRAYSTRING_ARRAY_METAINFO);
			SK_TYPE_DEF(RETURNARRAYSTRING_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(RETURNARRAYVECTOR2I);
			SK_TYPE_DEF(RETURNARRAYVECTOR2I_CONST_REF);
			SK_TYPE_DEF(RETURNARRAYVECTOR2I_ARRAY);
			SK_TYPE_DEF(RETURNARRAYVECTOR2I_ARRAY_CONST_REF);
			SK_TYPE_DEF(RETURNARRAYVECTOR2I_METAINFO);
			SK_TYPE_DEF(RETURNARRAYVECTOR2I_CONST_REF_METAINFO);
			SK_TYPE_DEF(RETURNARRAYVECTOR2I_ARRAY_METAINFO);
			SK_TYPE_DEF(RETURNARRAYVECTOR2I_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(RETURNARRAYVECTOR2);
			SK_TYPE_DEF(RETURNARRAYVECTOR2_CONST_REF);
			SK_TYPE_DEF(RETURNARRAYVECTOR2_ARRAY);
			SK_TYPE_DEF(RETURNARRAYVECTOR2_ARRAY_CONST_REF);
			SK_TYPE_DEF(RETURNARRAYVECTOR2_METAINFO);
			SK_TYPE_DEF(RETURNARRAYVECTOR2_CONST_REF_METAINFO);
			SK_TYPE_DEF(RETURNARRAYVECTOR2_ARRAY_METAINFO);
			SK_TYPE_DEF(RETURNARRAYVECTOR2_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(RETURNATTRIBUTES);
			SK_TYPE_DEF(RETURNATTRIBUTES_CONST_REF);
			SK_TYPE_DEF(RETURNATTRIBUTES_ARRAY);
			SK_TYPE_DEF(RETURNATTRIBUTES_ARRAY_CONST_REF);
			SK_TYPE_DEF(RETURNATTRIBUTES_METAINFO);
			SK_TYPE_DEF(RETURNATTRIBUTES_CONST_REF_METAINFO);
			SK_TYPE_DEF(RETURNATTRIBUTES_ARRAY_METAINFO);
			SK_TYPE_DEF(RETURNATTRIBUTES_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(RETURNBOOL);
			SK_TYPE_DEF(RETURNBOOL_CONST_REF);
			SK_TYPE_DEF(RETURNBOOL_ARRAY);
			SK_TYPE_DEF(RETURNBOOL_ARRAY_CONST_REF);
			SK_TYPE_DEF(RETURNBOOL_METAINFO);
			SK_TYPE_DEF(RETURNBOOL_CONST_REF_METAINFO);
			SK_TYPE_DEF(RETURNBOOL_ARRAY_METAINFO);
			SK_TYPE_DEF(RETURNBOOL_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(RETURNFUNCTIONTYPEINFO);
			SK_TYPE_DEF(RETURNFUNCTIONTYPEINFO_CONST_REF);
			SK_TYPE_DEF(RETURNFUNCTIONTYPEINFO_ARRAY);
			SK_TYPE_DEF(RETURNFUNCTIONTYPEINFO_ARRAY_CONST_REF);
			SK_TYPE_DEF(RETURNFUNCTIONTYPEINFO_METAINFO);
			SK_TYPE_DEF(RETURNFUNCTIONTYPEINFO_CONST_REF_METAINFO);
			SK_TYPE_DEF(RETURNFUNCTIONTYPEINFO_ARRAY_METAINFO);
			SK_TYPE_DEF(RETURNFUNCTIONTYPEINFO_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(RETURNINT32T);
			SK_TYPE_DEF(RETURNINT32T_CONST_REF);
			SK_TYPE_DEF(RETURNINT32T_ARRAY);
			SK_TYPE_DEF(RETURNINT32T_ARRAY_CONST_REF);
			SK_TYPE_DEF(RETURNINT32T_METAINFO);
			SK_TYPE_DEF(RETURNINT32T_CONST_REF_METAINFO);
			SK_TYPE_DEF(RETURNINT32T_ARRAY_METAINFO);
			SK_TYPE_DEF(RETURNINT32T_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(RETURNRAWDATA);
			SK_TYPE_DEF(RETURNRAWDATA_CONST_REF);
			SK_TYPE_DEF(RETURNRAWDATA_ARRAY);
			SK_TYPE_DEF(RETURNRAWDATA_ARRAY_CONST_REF);
			SK_TYPE_DEF(RETURNRAWDATA_METAINFO);
			SK_TYPE_DEF(RETURNRAWDATA_CONST_REF_METAINFO);
			SK_TYPE_DEF(RETURNRAWDATA_ARRAY_METAINFO);
			SK_TYPE_DEF(RETURNRAWDATA_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(RETURNSTRING);
			SK_TYPE_DEF(RETURNSTRING_CONST_REF);
			SK_TYPE_DEF(RETURNSTRING_ARRAY);
			SK_TYPE_DEF(RETURNSTRING_ARRAY_CONST_REF);
			SK_TYPE_DEF(RETURNSTRING_METAINFO);
			SK_TYPE_DEF(RETURNSTRING_CONST_REF_METAINFO);
			SK_TYPE_DEF(RETURNSTRING_ARRAY_METAINFO);
			SK_TYPE_DEF(RETURNSTRING_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(TYPEINFO);
			SK_TYPE_DEF(TYPEINFO_CONST_REF);
			SK_TYPE_DEF(TYPEINFO_ARRAY);
			SK_TYPE_DEF(TYPEINFO_ARRAY_CONST_REF);
			SK_TYPE_DEF(TYPEINFO_METAINFO);
			SK_TYPE_DEF(TYPEINFO_CONST_REF_METAINFO);
			SK_TYPE_DEF(TYPEINFO_ARRAY_METAINFO);
			SK_TYPE_DEF(TYPEINFO_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(RETURNTYPEINFO);
			SK_TYPE_DEF(RETURNTYPEINFO_CONST_REF);
			SK_TYPE_DEF(RETURNTYPEINFO_ARRAY);
			SK_TYPE_DEF(RETURNTYPEINFO_ARRAY_CONST_REF);
			SK_TYPE_DEF(RETURNTYPEINFO_METAINFO);
			SK_TYPE_DEF(RETURNTYPEINFO_CONST_REF_METAINFO);
			SK_TYPE_DEF(RETURNTYPEINFO_ARRAY_METAINFO);
			SK_TYPE_DEF(RETURNTYPEINFO_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(RETURNVECTOR2I);
			SK_TYPE_DEF(RETURNVECTOR2I_CONST_REF);
			SK_TYPE_DEF(RETURNVECTOR2I_ARRAY);
			SK_TYPE_DEF(RETURNVECTOR2I_ARRAY_CONST_REF);
			SK_TYPE_DEF(RETURNVECTOR2I_METAINFO);
			SK_TYPE_DEF(RETURNVECTOR2I_CONST_REF_METAINFO);
			SK_TYPE_DEF(RETURNVECTOR2I_ARRAY_METAINFO);
			SK_TYPE_DEF(RETURNVECTOR2I_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(RETURNVECTOR2);
			SK_TYPE_DEF(RETURNVECTOR2_CONST_REF);
			SK_TYPE_DEF(RETURNVECTOR2_ARRAY);
			SK_TYPE_DEF(RETURNVECTOR2_ARRAY_CONST_REF);
			SK_TYPE_DEF(RETURNVECTOR2_METAINFO);
			SK_TYPE_DEF(RETURNVECTOR2_CONST_REF_METAINFO);
			SK_TYPE_DEF(RETURNVECTOR2_ARRAY_METAINFO);
			SK_TYPE_DEF(RETURNVECTOR2_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(RETURNFLOAT);
			SK_TYPE_DEF(RETURNFLOAT_CONST_REF);
			SK_TYPE_DEF(RETURNFLOAT_ARRAY);
			SK_TYPE_DEF(RETURNFLOAT_ARRAY_CONST_REF);
			SK_TYPE_DEF(RETURNFLOAT_METAINFO);
			SK_TYPE_DEF(RETURNFLOAT_CONST_REF_METAINFO);
			SK_TYPE_DEF(RETURNFLOAT_ARRAY_METAINFO);
			SK_TYPE_DEF(RETURNFLOAT_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(BOOL);
			SK_TYPE_DEF(BOOL_CONST_REF);
			SK_TYPE_DEF(BOOL_ARRAY);
			SK_TYPE_DEF(BOOL_ARRAY_CONST_REF);
			SK_TYPE_DEF(BOOL_METAINFO);
			SK_TYPE_DEF(BOOL_CONST_REF_METAINFO);
			SK_TYPE_DEF(BOOL_ARRAY_METAINFO);
			SK_TYPE_DEF(BOOL_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(CHAR);
			SK_TYPE_DEF(CHAR_CONST_REF);
			SK_TYPE_DEF(CHAR_ARRAY);
			SK_TYPE_DEF(CHAR_ARRAY_CONST_REF);
			SK_TYPE_DEF(CHAR_METAINFO);
			SK_TYPE_DEF(CHAR_CONST_REF_METAINFO);
			SK_TYPE_DEF(CHAR_ARRAY_METAINFO);
			SK_TYPE_DEF(CHAR_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(FLOAT);
			SK_TYPE_DEF(FLOAT_CONST_REF);
			SK_TYPE_DEF(FLOAT_ARRAY);
			SK_TYPE_DEF(FLOAT_ARRAY_CONST_REF);
			SK_TYPE_DEF(FLOAT_METAINFO);
			SK_TYPE_DEF(FLOAT_CONST_REF_METAINFO);
			SK_TYPE_DEF(FLOAT_ARRAY_METAINFO);
			SK_TYPE_DEF(FLOAT_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(INT8T);
			SK_TYPE_DEF(INT8T_CONST_REF);
			SK_TYPE_DEF(INT8T_ARRAY);
			SK_TYPE_DEF(INT8T_ARRAY_CONST_REF);
			SK_TYPE_DEF(INT8T_METAINFO);
			SK_TYPE_DEF(INT8T_CONST_REF_METAINFO);
			SK_TYPE_DEF(INT8T_ARRAY_METAINFO);
			SK_TYPE_DEF(INT8T_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(INT16T);
			SK_TYPE_DEF(INT16T_CONST_REF);
			SK_TYPE_DEF(INT16T_ARRAY);
			SK_TYPE_DEF(INT16T_ARRAY_CONST_REF);
			SK_TYPE_DEF(INT16T_METAINFO);
			SK_TYPE_DEF(INT16T_CONST_REF_METAINFO);
			SK_TYPE_DEF(INT16T_ARRAY_METAINFO);
			SK_TYPE_DEF(INT16T_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(INT32T);
			SK_TYPE_DEF(INT32T_CONST_REF);
			SK_TYPE_DEF(INT32T_ARRAY);
			SK_TYPE_DEF(INT32T_ARRAY_CONST_REF);
			SK_TYPE_DEF(INT32T_METAINFO);
			SK_TYPE_DEF(INT32T_CONST_REF_METAINFO);
			SK_TYPE_DEF(INT32T_ARRAY_METAINFO);
			SK_TYPE_DEF(INT32T_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(INT64T);
			SK_TYPE_DEF(INT64T_CONST_REF);
			SK_TYPE_DEF(INT64T_ARRAY);
			SK_TYPE_DEF(INT64T_ARRAY_CONST_REF);
			SK_TYPE_DEF(INT64T_METAINFO);
			SK_TYPE_DEF(INT64T_CONST_REF_METAINFO);
			SK_TYPE_DEF(INT64T_ARRAY_METAINFO);
			SK_TYPE_DEF(INT64T_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(UINT8T);
			SK_TYPE_DEF(UINT8T_CONST_REF);
			SK_TYPE_DEF(UINT8T_ARRAY);
			SK_TYPE_DEF(UINT8T_ARRAY_CONST_REF);
			SK_TYPE_DEF(UINT8T_METAINFO);
			SK_TYPE_DEF(UINT8T_CONST_REF_METAINFO);
			SK_TYPE_DEF(UINT8T_ARRAY_METAINFO);
			SK_TYPE_DEF(UINT8T_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(UINT16T);
			SK_TYPE_DEF(UINT16T_CONST_REF);
			SK_TYPE_DEF(UINT16T_ARRAY);
			SK_TYPE_DEF(UINT16T_ARRAY_CONST_REF);
			SK_TYPE_DEF(UINT16T_METAINFO);
			SK_TYPE_DEF(UINT16T_CONST_REF_METAINFO);
			SK_TYPE_DEF(UINT16T_ARRAY_METAINFO);
			SK_TYPE_DEF(UINT16T_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(UINT32T);
			SK_TYPE_DEF(UINT32T_CONST_REF);
			SK_TYPE_DEF(UINT32T_ARRAY);
			SK_TYPE_DEF(UINT32T_ARRAY_CONST_REF);
			SK_TYPE_DEF(UINT32T_METAINFO);
			SK_TYPE_DEF(UINT32T_CONST_REF_METAINFO);
			SK_TYPE_DEF(UINT32T_ARRAY_METAINFO);
			SK_TYPE_DEF(UINT32T_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(UINT64T);
			SK_TYPE_DEF(UINT64T_CONST_REF);
			SK_TYPE_DEF(UINT64T_ARRAY);
			SK_TYPE_DEF(UINT64T_ARRAY_CONST_REF);
			SK_TYPE_DEF(UINT64T_METAINFO);
			SK_TYPE_DEF(UINT64T_CONST_REF_METAINFO);
			SK_TYPE_DEF(UINT64T_ARRAY_METAINFO);
			SK_TYPE_DEF(UINT64T_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(COLOR4C);
			SK_TYPE_DEF(COLOR4C_CONST_REF);
			SK_TYPE_DEF(COLOR4C_ARRAY);
			SK_TYPE_DEF(COLOR4C_ARRAY_CONST_REF);
			SK_TYPE_DEF(COLOR4C_METAINFO);
			SK_TYPE_DEF(COLOR4C_CONST_REF_METAINFO);
			SK_TYPE_DEF(COLOR4C_ARRAY_METAINFO);
			SK_TYPE_DEF(COLOR4C_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(COLOR4F);
			SK_TYPE_DEF(COLOR4F_CONST_REF);
			SK_TYPE_DEF(COLOR4F_ARRAY);
			SK_TYPE_DEF(COLOR4F_ARRAY_CONST_REF);
			SK_TYPE_DEF(COLOR4F_METAINFO);
			SK_TYPE_DEF(COLOR4F_CONST_REF_METAINFO);
			SK_TYPE_DEF(COLOR4F_ARRAY_METAINFO);
			SK_TYPE_DEF(COLOR4F_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(ENUM);
			SK_TYPE_DEF(ENUM_CONST_REF);
			SK_TYPE_DEF(ENUM_ARRAY);
			SK_TYPE_DEF(ENUM_ARRAY_CONST_REF);
			SK_TYPE_DEF(ENUM_METAINFO);
			SK_TYPE_DEF(ENUM_CONST_REF_METAINFO);
			SK_TYPE_DEF(ENUM_ARRAY_METAINFO);
			SK_TYPE_DEF(ENUM_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(FRAME);
			SK_TYPE_DEF(FRAME_CONST_REF);
			SK_TYPE_DEF(FRAME_ARRAY);
			SK_TYPE_DEF(FRAME_ARRAY_CONST_REF);
			SK_TYPE_DEF(FRAME_METAINFO);
			SK_TYPE_DEF(FRAME_CONST_REF_METAINFO);
			SK_TYPE_DEF(FRAME_ARRAY_METAINFO);
			SK_TYPE_DEF(FRAME_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(IMAGE);
			SK_TYPE_DEF(IMAGE_CONST_REF);
			SK_TYPE_DEF(IMAGE_ARRAY);
			SK_TYPE_DEF(IMAGE_ARRAY_CONST_REF);
			SK_TYPE_DEF(IMAGE_METAINFO);
			SK_TYPE_DEF(IMAGE_CONST_REF_METAINFO);
			SK_TYPE_DEF(IMAGE_ARRAY_METAINFO);
			SK_TYPE_DEF(IMAGE_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(MATRIX3);
			SK_TYPE_DEF(MATRIX3_CONST_REF);
			SK_TYPE_DEF(MATRIX3_ARRAY);
			SK_TYPE_DEF(MATRIX3_ARRAY_CONST_REF);
			SK_TYPE_DEF(MATRIX3_METAINFO);
			SK_TYPE_DEF(MATRIX3_CONST_REF_METAINFO);
			SK_TYPE_DEF(MATRIX3_ARRAY_METAINFO);
			SK_TYPE_DEF(MATRIX3_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(MATRIX4);
			SK_TYPE_DEF(MATRIX4_CONST_REF);
			SK_TYPE_DEF(MATRIX4_ARRAY);
			SK_TYPE_DEF(MATRIX4_ARRAY_CONST_REF);
			SK_TYPE_DEF(MATRIX4_METAINFO);
			SK_TYPE_DEF(MATRIX4_CONST_REF_METAINFO);
			SK_TYPE_DEF(MATRIX4_ARRAY_METAINFO);
			SK_TYPE_DEF(MATRIX4_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(QUATERNION);
			SK_TYPE_DEF(QUATERNION_CONST_REF);
			SK_TYPE_DEF(QUATERNION_ARRAY);
			SK_TYPE_DEF(QUATERNION_ARRAY_CONST_REF);
			SK_TYPE_DEF(QUATERNION_METAINFO);
			SK_TYPE_DEF(QUATERNION_CONST_REF_METAINFO);
			SK_TYPE_DEF(QUATERNION_ARRAY_METAINFO);
			SK_TYPE_DEF(QUATERNION_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(STRING);
			SK_TYPE_DEF(STRING_CONST_REF);
			SK_TYPE_DEF(STRING_ARRAY);
			SK_TYPE_DEF(STRING_ARRAY_CONST_REF);
			SK_TYPE_DEF(STRING_METAINFO);
			SK_TYPE_DEF(STRING_CONST_REF_METAINFO);
			SK_TYPE_DEF(STRING_ARRAY_METAINFO);
			SK_TYPE_DEF(STRING_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(VECTOR2);
			SK_TYPE_DEF(VECTOR2_CONST_REF);
			SK_TYPE_DEF(VECTOR2_ARRAY);
			SK_TYPE_DEF(VECTOR2_ARRAY_CONST_REF);
			SK_TYPE_DEF(VECTOR2_METAINFO);
			SK_TYPE_DEF(VECTOR2_CONST_REF_METAINFO);
			SK_TYPE_DEF(VECTOR2_ARRAY_METAINFO);
			SK_TYPE_DEF(VECTOR2_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(VECTOR2I);
			SK_TYPE_DEF(VECTOR2I_CONST_REF);
			SK_TYPE_DEF(VECTOR2I_ARRAY);
			SK_TYPE_DEF(VECTOR2I_ARRAY_CONST_REF);
			SK_TYPE_DEF(VECTOR2I_METAINFO);
			SK_TYPE_DEF(VECTOR2I_CONST_REF_METAINFO);
			SK_TYPE_DEF(VECTOR2I_ARRAY_METAINFO);
			SK_TYPE_DEF(VECTOR2I_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(VECTOR3);
			SK_TYPE_DEF(VECTOR3_CONST_REF);
			SK_TYPE_DEF(VECTOR3_ARRAY);
			SK_TYPE_DEF(VECTOR3_ARRAY_CONST_REF);
			SK_TYPE_DEF(VECTOR3_METAINFO);
			SK_TYPE_DEF(VECTOR3_CONST_REF_METAINFO);
			SK_TYPE_DEF(VECTOR3_ARRAY_METAINFO);
			SK_TYPE_DEF(VECTOR3_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(VECTOR3I);
			SK_TYPE_DEF(VECTOR3I_CONST_REF);
			SK_TYPE_DEF(VECTOR3I_ARRAY);
			SK_TYPE_DEF(VECTOR3I_ARRAY_CONST_REF);
			SK_TYPE_DEF(VECTOR3I_METAINFO);
			SK_TYPE_DEF(VECTOR3I_CONST_REF_METAINFO);
			SK_TYPE_DEF(VECTOR3I_ARRAY_METAINFO);
			SK_TYPE_DEF(VECTOR3I_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(VECTOR4);
			SK_TYPE_DEF(VECTOR4_CONST_REF);
			SK_TYPE_DEF(VECTOR4_ARRAY);
			SK_TYPE_DEF(VECTOR4_ARRAY_CONST_REF);
			SK_TYPE_DEF(VECTOR4_METAINFO);
			SK_TYPE_DEF(VECTOR4_CONST_REF_METAINFO);
			SK_TYPE_DEF(VECTOR4_ARRAY_METAINFO);
			SK_TYPE_DEF(VECTOR4_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(VERTEX);
			SK_TYPE_DEF(VERTEX_CONST_REF);
			SK_TYPE_DEF(VERTEX_ARRAY);
			SK_TYPE_DEF(VERTEX_ARRAY_CONST_REF);
			SK_TYPE_DEF(VERTEX_METAINFO);
			SK_TYPE_DEF(VERTEX_CONST_REF_METAINFO);
			SK_TYPE_DEF(VERTEX_ARRAY_METAINFO);
			SK_TYPE_DEF(VERTEX_ARRAY_CONST_REF_METAINFO);
			SK_TYPE_DEF(ACTIVATIONGESTUREEVENT);
			SK_TYPE_DEF(ACTIVATIONGESTUREEVENT_CONST_REF);
			SK_TYPE_DEF(ACTIVATIONGESTUREEVENT_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_ACTIVATIONGESTUREEVENT_METAINFO);
			SK_TYPE_DEF(BACKGROUNDSNAPSHOTRESULTEVENT);
			SK_TYPE_DEF(BACKGROUNDSNAPSHOTRESULTEVENT_CONST_REF);
			SK_TYPE_DEF(BACKGROUNDSNAPSHOTRESULTEVENT_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_BACKGROUNDSNAPSHOTRESULTEVENT_METAINFO);
			SK_TYPE_DEF(CALIBRATIONRESULTEVENT);
			SK_TYPE_DEF(CALIBRATIONRESULTEVENT_CONST_REF);
			SK_TYPE_DEF(CALIBRATIONRESULTEVENT_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_CALIBRATIONRESULTEVENT_METAINFO);
			SK_TYPE_DEF(CAMERADEOCCLUSIONEVENT);
			SK_TYPE_DEF(CAMERADEOCCLUSIONEVENT_CONST_REF);
			SK_TYPE_DEF(CAMERADEOCCLUSIONEVENT_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_CAMERADEOCCLUSIONEVENT_METAINFO);
			SK_TYPE_DEF(CAMERAOCCLUSIONEVENT);
			SK_TYPE_DEF(CAMERAOCCLUSIONEVENT_CONST_REF);
			SK_TYPE_DEF(CAMERAOCCLUSIONEVENT_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_CAMERAOCCLUSIONEVENT_METAINFO);
			SK_TYPE_DEF(CLICKGESTUREEVENT);
			SK_TYPE_DEF(CLICKGESTUREEVENT_CONST_REF);
			SK_TYPE_DEF(CLICKGESTUREEVENT_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_CLICKGESTUREEVENT_METAINFO);
			SK_TYPE_DEF(CIRCLEGESTUREEVENT);
			SK_TYPE_DEF(CIRCLEGESTUREEVENT_CONST_REF);
			SK_TYPE_DEF(CIRCLEGESTUREEVENT_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_CIRCLEGESTUREEVENT_METAINFO);
			SK_TYPE_DEF(CONTROLLERCREATIONEVENT);
			SK_TYPE_DEF(CONTROLLERCREATIONEVENT_CONST_REF);
			SK_TYPE_DEF(CONTROLLERCREATIONEVENT_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_CONTROLLERCREATIONEVENT_METAINFO);
			SK_TYPE_DEF(CONTROLLERDESTRUCTIONEVENT);
			SK_TYPE_DEF(CONTROLLERDESTRUCTIONEVENT_CONST_REF);
			SK_TYPE_DEF(CONTROLLERDESTRUCTIONEVENT_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_CONTROLLERDESTRUCTIONEVENT_METAINFO);
			SK_TYPE_DEF(DATAFRAMEEVENT);
			SK_TYPE_DEF(DATAFRAMEEVENT_CONST_REF);
			SK_TYPE_DEF(DATAFRAMEEVENT_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_DATAFRAMEEVENT_METAINFO);
			SK_TYPE_DEF(GENERICEVENT);
			SK_TYPE_DEF(GENERICEVENT_CONST_REF);
			SK_TYPE_DEF(GENERICEVENT_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_GENERICEVENT_METAINFO);
			SK_TYPE_DEF(ERROREVENT);
			SK_TYPE_DEF(ERROREVENT_CONST_REF);
			SK_TYPE_DEF(ERROREVENT_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_ERROREVENT_METAINFO);
			SK_TYPE_DEF(GESTUREEVENT);
			SK_TYPE_DEF(GESTUREEVENT_CONST_REF);
			SK_TYPE_DEF(GESTUREEVENT_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_GESTUREEVENT_METAINFO);
			SK_TYPE_DEF(NUMBERGESTUREEVENT);
			SK_TYPE_DEF(NUMBERGESTUREEVENT_CONST_REF);
			SK_TYPE_DEF(NUMBERGESTUREEVENT_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_NUMBERGESTUREEVENT_METAINFO);
			SK_TYPE_DEF(STATUSEVENT);
			SK_TYPE_DEF(STATUSEVENT_CONST_REF);
			SK_TYPE_DEF(STATUSEVENT_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_STATUSEVENT_METAINFO);
			SK_TYPE_DEF(SWIPEGESTUREEVENT);
			SK_TYPE_DEF(SWIPEGESTUREEVENT_CONST_REF);
			SK_TYPE_DEF(SWIPEGESTUREEVENT_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_SWIPEGESTUREEVENT_METAINFO);
			SK_TYPE_DEF(USERACTIVATEDEVENT);
			SK_TYPE_DEF(USERACTIVATEDEVENT_CONST_REF);
			SK_TYPE_DEF(USERACTIVATEDEVENT_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_USERACTIVATEDEVENT_METAINFO);
			SK_TYPE_DEF(USERDATALISTUPDATEDEVENT);
			SK_TYPE_DEF(USERDATALISTUPDATEDEVENT_CONST_REF);
			SK_TYPE_DEF(USERDATALISTUPDATEDEVENT_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_USERDATALISTUPDATEDEVENT_METAINFO);
			SK_TYPE_DEF(USERDEACTIVATEDEVENT);
			SK_TYPE_DEF(USERDEACTIVATEDEVENT_CONST_REF);
			SK_TYPE_DEF(USERDEACTIVATEDEVENT_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_USERDEACTIVATEDEVENT_METAINFO);
			SK_TYPE_DEF(USERSSTARTTOUCHINGEVENT);
			SK_TYPE_DEF(USERSSTARTTOUCHINGEVENT_CONST_REF);
			SK_TYPE_DEF(USERSSTARTTOUCHINGEVENT_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_USERSSTARTTOUCHINGEVENT_METAINFO);
			SK_TYPE_DEF(USERSSTOPTOUCHINGEVENT);
			SK_TYPE_DEF(USERSSTOPTOUCHINGEVENT_CONST_REF);
			SK_TYPE_DEF(USERSSTOPTOUCHINGEVENT_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_USERSSTOPTOUCHINGEVENT_METAINFO);
			SK_TYPE_DEF(USERSTARTSMOVINGEVENT);
			SK_TYPE_DEF(USERSTARTSMOVINGEVENT_CONST_REF);
			SK_TYPE_DEF(USERSTARTSMOVINGEVENT_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_USERSTARTSMOVINGEVENT_METAINFO);
			SK_TYPE_DEF(USERSTOPSMOVINGEVENT);
			SK_TYPE_DEF(USERSTOPSMOVINGEVENT_CONST_REF);
			SK_TYPE_DEF(USERSTOPSMOVINGEVENT_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_USERSTOPSMOVINGEVENT_METAINFO);
			SK_TYPE_DEF(USERTRANSFEREDEVENT);
			SK_TYPE_DEF(USERTRANSFEREDEVENT_CONST_REF);
			SK_TYPE_DEF(USERTRANSFEREDEVENT_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_USERTRANSFEREDEVENT_METAINFO);
			SK_TYPE_DEF(WAVEGESTUREEVENT);
			SK_TYPE_DEF(WAVEGESTUREEVENT_CONST_REF);
			SK_TYPE_DEF(WAVEGESTUREEVENT_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_WAVEGESTUREEVENT_METAINFO);
			SK_TYPE_DEF(PARAMETERCHANGEDEVENT);
			SK_TYPE_DEF(PARAMETERCHANGEDEVENT_CONST_REF);
			SK_TYPE_DEF(PARAMETERCHANGEDEVENT_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_PARAMETERCHANGEDEVENT_METAINFO);
			SK_TYPE_DEF(HANDPOSINGGESTUREEVENT);
			SK_TYPE_DEF(HANDPOSINGGESTUREEVENT_CONST_REF);
			SK_TYPE_DEF(HANDPOSINGGESTUREEVENT_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_HANDPOSINGGESTUREEVENT_METAINFO);
			SK_TYPE_DEF(HANDACTIVATEDEVENT);
			SK_TYPE_DEF(HANDACTIVATEDEVENT_CONST_REF);
			SK_TYPE_DEF(HANDACTIVATEDEVENT_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_HANDACTIVATEDEVENT_METAINFO);
			SK_TYPE_DEF(HANDDEACTIVATEDEVENT);
			SK_TYPE_DEF(HANDDEACTIVATEDEVENT_CONST_REF);
			SK_TYPE_DEF(HANDDEACTIVATEDEVENT_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_HANDDEACTIVATEDEVENT_METAINFO);
			SK_TYPE_DEF(HANDMOVINGGESTUREEVENT);
			SK_TYPE_DEF(HANDMOVINGGESTUREEVENT_CONST_REF);
			SK_TYPE_DEF(HANDMOVINGGESTUREEVENT_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_HANDMOVINGGESTUREEVENT_METAINFO);
			SK_TYPE_DEF(CALIBRATIONFAILUREEVENT);
			SK_TYPE_DEF(CALIBRATIONFAILUREEVENT_CONST_REF);
			SK_TYPE_DEF(CALIBRATIONFAILUREEVENT_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_CALIBRATIONFAILUREEVENT_METAINFO);
			SK_TYPE_DEF(FUNCTION_BOOL_BOOL_METAINFO);
			SK_TYPE_DEF(FUNCTION_BOOL_STRING_METAINFO);
			SK_TYPE_DEF(FUNCTION_INT32T_METAINFO);
			SK_TYPE_DEF(FUNCTION_INT32T_BOOL_METAINFO);
			SK_TYPE_DEF(FUNCTION_UINT32T_BOOL_METAINFO);
			SK_TYPE_DEF(FUNCTION_INT32T_STRING_TYPEINFO_METAINFO);
			SK_TYPE_DEF(FUNCTION_RETURNARRAYSTRING_METAINFO);
			SK_TYPE_DEF(FUNCTION_RETURNARRAYSTRING_STRING_METAINFO);
			SK_TYPE_DEF(FUNCTION_RETURNARRAYVECTOR2_STRING_STRING_METAINFO);
			SK_TYPE_DEF(FUNCTION_RETURNARRAYVECTOR2I_STRING_STRING_METAINFO);
			SK_TYPE_DEF(FUNCTION_RETURNATTRIBUTES_STRING_METAINFO);
			SK_TYPE_DEF(FUNCTION_RETURNBOOL_BOOL_METAINFO);
			SK_TYPE_DEF(FUNCTION_RETURNBOOL_INT32T_METAINFO);
			SK_TYPE_DEF(FUNCTION_RETURNBOOL_STRING_METAINFO);
			SK_TYPE_DEF(FUNCTION_RETURNFUNCTIONTYPEINFO_STRING_METAINFO);
			SK_TYPE_DEF(FUNCTION_RETURNINT32T_STRING_METAINFO);
			SK_TYPE_DEF(FUNCTION_RETURNINT32T_STRING_TYPEINFO_METAINFO);
			SK_TYPE_DEF(FUNCTION_RETURNINT32T_STRING_TYPEINFO_BOOL_METAINFO);
			SK_TYPE_DEF(FUNCTION_RETURNRAWDATA_INT32T_TYPEINFO_METAINFO);
			SK_TYPE_DEF(FUNCTION_RETURNSTRING_METAINFO);
			SK_TYPE_DEF(FUNCTION_RETURNSTRING_STRING_METAINFO);
			SK_TYPE_DEF(FUNCTION_RETURNVOID_ARRAYSTRING_STRING_METAINFO);
			SK_TYPE_DEF(FUNCTION_RETURNVOID_BOOL_METAINFO);
			SK_TYPE_DEF(FUNCTION_RETURNVOID_INT32T_BOOL_METAINFO);
			SK_TYPE_DEF(FUNCTION_RETURNVOID_INT32T_RAWDATA_METAINFO);
			SK_TYPE_DEF(FUNCTION_RETURNVOID_INT32T_TYPEINFO_METAINFO);
			SK_TYPE_DEF(FUNCTION_RETURNVOID_INT32T_METAINFO);
			SK_TYPE_DEF(FUNCTION_RETURNVOID_STRING_METAINFO);
			SK_TYPE_DEF(FUNCTION_RETURNVOID_STRING_STRING_METAINFO);
			SK_TYPE_DEF(FUNCTION_RETURNVOID_STRING_STRING_BOOL_METAINFO);
			SK_TYPE_DEF(FUNCTION_RETURNVOID_STRING_STRING_FLOAT_METAINFO);
			SK_TYPE_DEF(FUNCTION_RETURNVOID_STRING_STRING_VECTOR2I_METAINFO);
			SK_TYPE_DEF(FUNCTION_RETURNVOID_STRING_STRING_VECTOR2_METAINFO);
			SK_TYPE_DEF(FUNCTION_RETURNVOID_VOID_METAINFO);
			SK_TYPE_DEF(FUNCTION_RETURNRAWDATA_STRING_TYPEINFO_METAINFO);
			SK_TYPE_DEF(FUNCTION_STRING_STRING_METAINFO);
			SK_TYPE_DEF(FUNCTION_STRING_UINT32T_METAINFO);
			SK_TYPE_DEF(FUNCTION_STRING_UINT32T_BOOL_METAINFO);
			SK_TYPE_DEF(FUNCTION_RETURNTYPEINFO_STRING_METAINFO);
			SK_TYPE_DEF(FUNCTION_UINT32T_METAINFO);
			SK_TYPE_DEF(FUNCTION_UINT32T_STRING_METAINFO);
			SK_TYPE_DEF(FUNCTION_UINT32T_STRING_STRING_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_BOOL_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_INT32T_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_INT32T_INT32T_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_INT32T_VECTOR3_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_INT8T_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_INT8T_INT8T_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_ENUM_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_STRING_ENUM_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_STRING_ENUM_VECTOR3_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_STRING_STRING_BOOL_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_STRING_STRING_ARRAYRAWDATA_FUNCTIONTYPEINFO_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_STRING_ERROR_BOOL_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_STRING_INT32T_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_STRING_INT32T_ENUM_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_STRING_INT32T_VECTOR3_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_STRING_INT32T_VECTOR3_INT32T_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_STRING_INT8T_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_STRING_INT8T_INT8T_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_STRING_STRING_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_STRING_UINT32T_METAINFO);
			SK_TYPE_DEF(FUNCTION_RETURNSTRING_INT32T_METAINFO);
			SK_TYPE_DEF(FUNCTION_RETURNINT32T_METAINFO);
			SK_TYPE_DEF(FUNCTION_RETURNBOOL_STRING_STRING_METAINFO);
			SK_TYPE_DEF(FUNCTION_RETURNVECTOR2I_STRING_STRING_METAINFO);
			SK_TYPE_DEF(FUNCTION_RETURNFLOAT_STRING_STRING_METAINFO);
			SK_TYPE_DEF(FUNCTION_RETURNVECTOR2_STRING_STRING_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_INT16T_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_INT16T_VECTOR3_METAINFO);
			SK_TYPE_DEF(FUNCTION_RETURNVOID_ENUM_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_STRING_ARRAYINT32T_ARRAYRAWDATA_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_ARRAYFRAME_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_STRING_FLOAT_ENUM_UINT32T_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_STRING_ENUM_INT32T_VECTOR3_VECTOR3_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_STRING_ENUM_UINT32T_METAINFO);
			SK_TYPE_DEF(FUNCTION_VOID_STRING_INT32T_INT32T_UINT32T_METAINFO);
			SK_TYPE_DEF(FUNCTION_RETURNVOID_UINT32T_METAINFO);
			SK_TYPE_DEF(FUNCTION_RETURNVOID_ENUM_ARRAYINT16T_METAINFO);
			SK_TYPE_DEF(FUNCTION_RETURNVOID_INT32T_VECTOR3_METAINFO);
			SK_TYPE_DEF(FUNCTION_RETURNVOID_INT16T_METAINFO);
		
	public:

		/**
		 * \fn		friend bool operator==(const self_t& lhs, const self_t& rhs)
		 *
		 * \brief	Compare two TypeInfo.
		 *
		 * \param	lhs		left hand side TypeInfo
		 * \param	rhs		right hand side TypeInfo
		 *
		 * \return	true if the two object are equals, false otherwise.
		 */

		friend bool operator==(const self_t& lhs, const self_t& rhs) { return (lhs.typeID()==rhs.typeID()); }

		/**
		 * \fn		friend bool operator!=(const self_t& lhs, const self_t& rhs)
		 *
		 * \brief	Compare two TypeInfo.
		 *
		 * \param	lhs		left hand side TypeInfo
		 * \param	rhs		right hand side TypeInfo
		 *
		 * \return	true if the two object are different, false otherwise.
		 */

		friend bool operator!=(const self_t& lhs, const self_t& rhs) { return !(lhs==rhs); }

	public:

		/**
		 * \fn innerType_t typeID() const
		 *
		 * \brief	Gets the integer corresponding to this TypeInfo.
		 * 
		 * \return	The integer corresponding to this TypeInfo.
		 *
		 * \sa	SKTypeInfoDefinition
		 */

		innerType_t typeID() const { return m_typeID; }

		/**
		 * \fn const char* name() const
		 *
		 * \brief	Gets a textual description of this TypeInfo.
		 * 
		 * \return	A textual description of this TypeInfo.
		 */

		const char* name() const { return m_name.ptr() ; }

		/**
		 * \fn TypeInfoCharacteristic::Type getCharacteristics() const
		 *
		 * \brief	Gets the characteristics corresponding to this TypeInfo.
		 * 
		 * \return	The characteristics corresponding to this TypeInfo.
		 *
		 * \sa	TypeInfoCharacteristic::Type
		 */

		TypeInfoCharacteristic::Type getCharacteristics() const { return m_characteristics; }

	public: 
		/**
		 * \fn	static std::auto_ptr<TypelessInterface> TypeInfo::injectType(const TypeInfo& typeInfo);
		 *
		 * \brief	Inject back the C++ type corresponding to the TypeInfo.
		 *
		 * \param	typeInfo	The TypeInfo.
		 *
		 * \return	A base pointer of the TypelessInterface pointing to a TypedImplementation instantiated with the proper C++ type corresponding to the TypeInfo.
		 * The pointer is returned as a std::auto_ptr to automated the mememory management.
		 */		

		template<class TypelessInterface, template <typename T> class TypedImplementation>
		static std::auto_ptr<TypelessInterface> injectType(const TypeInfo& typeInfo);

		/**
		 * \fn	static std::auto_ptr<TypelessInterface> injectDataType(const SK::TypeInfo& typeInfo);
		 *
		 * \brief	Inject back the C++ type corresponding to the TypeInfo.
		 *
		 * \param	typeInfo	The TypeInfo.
		 *
		 * \return	A base pointer of the TypelessInterface pointing to a TypedImplementation instantiated with the proper C++ type corresponding to the TypeInfo.
		 * The pointer is returned as a std::auto_ptr to automated the mememory management.
		 * \warning This function only handle the TypeInfo that are iisu data/parameter type or a type used in the command/event of iisu. For all other type it will return an empty auto_ptr.
		 */		

    template<class TypelessInterface, template <typename T> class TypedImplementation>
	  static std::auto_ptr<TypelessInterface> injectDataType(const SK::TypeInfo& typeInfo);

		/**
		 * \fn	static std::auto_ptr<TypelessInterface> injectSerialDataType(const SK::TypeInfo& typeInfo);
		 *
		 * \brief	Inject back the C++ type corresponding to the TypeInfo.
		 *
		 * \param	typeInfo	The TypeInfo.
		 *
		 * \return	A base pointer of the TypelessInterface pointing to a TypedImplementation instantiated with the proper C++ type corresponding to the TypeInfo.
		 * The pointer is returned as a std::auto_ptr to automated the mememory management.
		 * \warning This function only handle the TypeInfo that are iisu data/parameter type or a type used in the command/event of iisu except for 'void'. For all other type it will return an empty auto_ptr.
		 */		

    template<class TypelessInterface, template <typename T> class TypedImplementation>
	  static std::auto_ptr<TypelessInterface> injectSerialDataType(const SK::TypeInfo& typeInfo);

		/**
		 * \fn	static std::auto_ptr<TypelessInterface> injectSerializableType(const SK::TypeInfo& typeInfo);
		 *
		 * \brief	Inject back the C++ type corresponding to the TypeInfo.
		 *
		 * \param	typeInfo	The TypeInfo.
		 *
		 * \return	A base pointer of the TypelessInterface pointing to a TypedImplementation instantiated with the proper C++ type corresponding to the TypeInfo.
		 * The pointer is returned as a std::auto_ptr to automated the mememory management.
		 * \warning This function only handle the TypeInfo that are serializable. For all other type it will return an empty auto_ptr
		 */		

		template<class TypelessInterface, template <typename T> class TypedImplementation>
		static std::auto_ptr<TypelessInterface> injectSerializableType(const SK::TypeInfo& typeInfo);

		/**
		 * \fn	static std::auto_ptr<TypelessInterface> injectIisuType(const TypeInfo& typeInfo);
		 *
		 * \brief	Inject back the C++ type corresponding to the TypeInfo.
		 *
		 * \param	typeInfo	The TypeInfo.
		 *
		 * \return	A base pointer of the TypelessInterface pointing to a TypedImplementation instantiated with the proper C++ type corresponding to the TypeInfo.
		 * The pointer is returned as a std::auto_ptr to automated the mememory management.
		 * \warning This function only handle the TypeInfo that are iisu data/parameter type. For all other type it will return an empty auto_ptr
		 */		

		template<class TypelessInterface, template <typename T> class TypedImplementation>
		static std::auto_ptr<TypelessInterface> injectIisuType(const TypeInfo& typeInfo);

		/**
		 * \fn	static std::auto_ptr<TypelessInterface> injectEventType(const TypeInfo& typeInfo);
		 *
		 * \brief	Inject back the C++ type corresponding to the TypeInfo.
		 *
		 * \param	typeInfo	The TypeInfo.
		 *
		 * \return	A base pointer of the TypelessInterface pointing to a TypedImplementation instantiated with the proper C++ type corresponding to the TypeInfo.
		 * The pointer is returned as a std::auto_ptr to automated the mememory management.
		 * \warning This function only handle the TypeInfo that are an event class type. For all other type it will return an empty auto_ptr
		 */		

		template<class TypelessInterface, template <typename T> class TypedImplementation>
		static std::auto_ptr<TypelessInterface> injectEventType(const TypeInfo& typeInfo);

		/**
		 * \fn	static std::auto_ptr<TypelessInterface> injectMetaInfoType(const TypeInfo& typeInfo);
		 *
		 * \brief	Inject back the C++ type corresponding to the TypeInfo.
		 *
		 * \param	typeInfo	The TypeInfo.
		 *
		 * \return	A base pointer of the TypelessInterface pointing to a TypedImplementation instantiated with the proper C++ type corresponding to the TypeInfo.
		 * The pointer is returned as a std::auto_ptr to automated the mememory management.
		 * \warning This function only handle the TypeInfo that are meta information. For all other type it will return an empty auto_ptr
		 */		

    template<class TypelessInterface, template <typename T> class TypedImplementation>
		static std::auto_ptr<TypelessInterface> injectMetaInfoType(const TypeInfo& typeInfo);

		/**
		 * \fn	static TypeInfo createFromID(innerType_t id);
		 *
		 * \brief	Create a TypeInfo from a unsigned interger
		 *
		 * \param	id	The TypeInfo id.
		 *
		 * \return	The TypeInfo
		 */		

		static TypeInfo createFromID(innerType_t id);

	private:
		innerType_t m_typeID;
		SK::String m_name;
		TypeInfoCharacteristic::Type m_characteristics;
	};

	/**
	 * \struct	UnknownType
	 *
	 * \brief	Class representing the unknown type. 
	 */

	struct UnknownType{};

	/**
	 * \struct	InternalType
	 *
	 * \brief	Class representing an Internal type. 
	 */

	struct InternalType{};

	namespace 
	{	
		/**
		 * \struct	Type
		 *
		 * \brief	A template class that is use to create the TypeInfo for the template argument. 
		 * 			
		 * 			For example, SK::Type<int>::INFO gives the TypeInfo for an int.
		 */

		template<typename T> struct Type
		{
			///< The TypeInfo corresponding to T
			static const TypeInfo INFO;
			///< Is true if the T is an iisu data/parameter type, is undefined and won't link if otherwise.
			static const bool IISU_DATA_TYPE;
		};

            SK_TYPE_ID(void,			      		  			VOID_TYPE,						        "Void", TypeInfoCharacteristic::NONE);
            SK_TYPE_ID(UnknownType,					  			UNKNOWN_TYPE,						"Unknown Type", TypeInfoCharacteristic::NONE);
            IISU_TYPE_ID(InternalType,								INTERNAL_TYPE,						"Internal Type", TypeInfoCharacteristic::NONE);
            SK_TYPE_ID(SK::MetaInfo< UnknownType >,	UNKNOWN_TYPE_METAINFO,		"Unknown Type", (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
            SK_TYPE_ID(SK::MetaInfo< UnknownType() >,	FUNCTION_UNKNOWN_TYPE_METAINFO,		"FUNCTION: Unknown Type()",(TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
            SK_TYPE_ID(SK::MetaInfo< InternalType >,	INTERNAL_TYPE_METAINFO,		"Internal Type", (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
            SK_TYPE_ID(SK::MetaInfo< InternalType() >,	FUNCTION_INTERNAL_TYPE_METAINFO,		"FUNCTION: Internal Type()",(TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
            //SK_TYPE_ID(SK::MetaInfo< InternalType >,INTERNAL_TYPE_METAINFO,	"Internal Type", (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
            SK_TYPE_ID(SK::MetaInfo< void(const SK::String&) >,FUNCTION_VOID_STRING_METAINFO,"Meta Information of FUNCTION: Void(String)",(TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			
            
			SK_TYPE_ID  ( SK::Attributes                                                    , ATTRIBUTES                                                                     , "NON IISU DATA TYPE : Attributes"                                              , TypeInfoCharacteristic::IS_SERIALIZABLE);
			SK_TYPE_ID  ( SK::Array< SK::Attributes >                                       , ATTRIBUTES_ARRAY                                                               , "NON IISU DATA TYPE : Array< Attributes >"                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const SK::Attributes&                                             , ATTRIBUTES_CONST_REF                                                           , "NON IISU DATA TYPE : const Attributes&"                                       , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< SK::Attributes >&                                , ATTRIBUTES_ARRAY_CONST_REF                                                     , "NON IISU DATA TYPE : const Array< Attributes >&"                              , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Attributes >                                    , ATTRIBUTES_METAINFO                                                            , "METAINFO : Attributes"                                                        , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< SK::Attributes > >                       , ATTRIBUTES_ARRAY_METAINFO                                                      , "METAINFO : Array< Attributes >"                                               , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::EnumMapper                                                    , ENUMMAPPER                                                                     , "NON IISU DATA TYPE : EnumMapper"                                              , TypeInfoCharacteristic::IS_SERIALIZABLE);
			SK_TYPE_ID  ( SK::Array< SK::EnumMapper >                                       , ENUMMAPPER_ARRAY                                                               , "NON IISU DATA TYPE : Array< EnumMapper >"                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const SK::EnumMapper&                                             , ENUMMAPPER_CONST_REF                                                           , "NON IISU DATA TYPE : const EnumMapper&"                                       , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< SK::EnumMapper >&                                , ENUMMAPPER_ARRAY_CONST_REF                                                     , "NON IISU DATA TYPE : const Array< EnumMapper >&"                              , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< SK::EnumMapper >                                    , ENUMMAPPER_METAINFO                                                            , "METAINFO : EnumMapper"                                                        , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< SK::EnumMapper > >                       , ENUMMAPPER_ARRAY_METAINFO                                                      , "METAINFO : Array< EnumMapper >"                                               , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::Error                                                         , ERROR                                                                          , "NON IISU DATA TYPE : Error"                                                   , TypeInfoCharacteristic::IS_SERIALIZABLE);
			SK_TYPE_ID  ( SK::Array< SK::Error >                                            , ERROR_ARRAY                                                                    , "NON IISU DATA TYPE : Array< Error >"                                          , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const SK::Error&                                                  , ERROR_CONST_REF                                                                , "NON IISU DATA TYPE : const Error&"                                            , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< SK::Error >&                                     , ERROR_ARRAY_CONST_REF                                                          , "NON IISU DATA TYPE : const Array< Error >&"                                   , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Error >                                         , ERROR_METAINFO                                                                 , "METAINFO : Error"                                                             , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< SK::Error > >                            , ERROR_ARRAY_METAINFO                                                           , "METAINFO : Array< Error >"                                                    , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::FunctionTypeInfo                                              , FUNCTIONTYPEINFO                                                               , "NON IISU DATA TYPE : FunctionTypeInfo"                                        , TypeInfoCharacteristic::IS_SERIALIZABLE);
			SK_TYPE_ID  ( SK::Array< SK::FunctionTypeInfo >                                 , FUNCTIONTYPEINFO_ARRAY                                                         , "NON IISU DATA TYPE : Array< FunctionTypeInfo >"                               , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const SK::FunctionTypeInfo&                                       , FUNCTIONTYPEINFO_CONST_REF                                                     , "NON IISU DATA TYPE : const FunctionTypeInfo&"                                 , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< SK::FunctionTypeInfo >&                          , FUNCTIONTYPEINFO_ARRAY_CONST_REF                                               , "NON IISU DATA TYPE : const Array< FunctionTypeInfo >&"                        , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< SK::FunctionTypeInfo >                              , FUNCTIONTYPEINFO_METAINFO                                                      , "METAINFO : FunctionTypeInfo"                                                  , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< SK::FunctionTypeInfo > >                 , FUNCTIONTYPEINFO_ARRAY_METAINFO                                                , "METAINFO : Array< FunctionTypeInfo >"                                         , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::ImageInfos                                                    , IMAGEINFOS                                                                     , "NON IISU DATA TYPE : ImageInfos"                                              , TypeInfoCharacteristic::IS_SERIALIZABLE);
			SK_TYPE_ID  ( SK::Array< SK::ImageInfos >                                       , IMAGEINFOS_ARRAY                                                               , "NON IISU DATA TYPE : Array< ImageInfos >"                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const SK::ImageInfos&                                             , IMAGEINFOS_CONST_REF                                                           , "NON IISU DATA TYPE : const ImageInfos&"                                       , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< SK::ImageInfos >&                                , IMAGEINFOS_ARRAY_CONST_REF                                                     , "NON IISU DATA TYPE : const Array< ImageInfos >&"                              , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< SK::ImageInfos >                                    , IMAGEINFOS_METAINFO                                                            , "METAINFO : ImageInfos"                                                        , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< SK::ImageInfos > >                       , IMAGEINFOS_ARRAY_METAINFO                                                      , "METAINFO : Array< ImageInfos >"                                               , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::ImageSizer                                                    , IMAGESIZER                                                                     , "NON IISU DATA TYPE : ImageSizer"                                              , TypeInfoCharacteristic::IS_SERIALIZABLE);
			SK_TYPE_ID  ( SK::Array< SK::ImageSizer >                                       , IMAGESIZER_ARRAY                                                               , "NON IISU DATA TYPE : Array< ImageSizer >"                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const SK::ImageSizer&                                             , IMAGESIZER_CONST_REF                                                           , "NON IISU DATA TYPE : const ImageSizer&"                                       , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< SK::ImageSizer >&                                , IMAGESIZER_ARRAY_CONST_REF                                                     , "NON IISU DATA TYPE : const Array< ImageSizer >&"                              , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< SK::ImageSizer >                                    , IMAGESIZER_METAINFO                                                            , "METAINFO : ImageSizer"                                                        , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< SK::ImageSizer > >                       , IMAGESIZER_ARRAY_METAINFO                                                      , "METAINFO : Array< ImageSizer >"                                               , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::RawData                                                       , RAWDATA                                                                        , "NON IISU DATA TYPE : RawData"                                                 , TypeInfoCharacteristic::IS_SERIALIZABLE);
			SK_TYPE_ID  ( SK::Array< SK::RawData >                                          , RAWDATA_ARRAY                                                                  , "NON IISU DATA TYPE : Array< RawData >"                                        , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const SK::RawData&                                                , RAWDATA_CONST_REF                                                              , "NON IISU DATA TYPE : const RawData&"                                          , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< SK::RawData >&                                   , RAWDATA_ARRAY_CONST_REF                                                        , "NON IISU DATA TYPE : const Array< RawData >&"                                 , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< SK::RawData >                                       , RAWDATA_METAINFO                                                               , "METAINFO : RawData"                                                           , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< SK::RawData > >                          , RAWDATA_ARRAY_METAINFO                                                         , "METAINFO : Array< RawData >"                                                  , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::Result                                                        , RESULT                                                                         , "NON IISU DATA TYPE : Result"                                                  , TypeInfoCharacteristic::IS_SERIALIZABLE);
			SK_TYPE_ID  ( SK::Array< SK::Result >                                           , RESULT_ARRAY                                                                   , "NON IISU DATA TYPE : Array< Result >"                                         , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const SK::Result&                                                 , RESULT_CONST_REF                                                               , "NON IISU DATA TYPE : const Result&"                                           , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< SK::Result >&                                    , RESULT_ARRAY_CONST_REF                                                         , "NON IISU DATA TYPE : const Array< Result >&"                                  , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Result >                                        , RESULT_METAINFO                                                                , "METAINFO : Result"                                                            , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< SK::Result > >                           , RESULT_ARRAY_METAINFO                                                          , "METAINFO : Array< Result >"                                                   , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::Return< SK::Array<SK::String> >                               , RETURNARRAYSTRING                                                              , "NON IISU DATA TYPE : Return< Array<String> >"                                 , TypeInfoCharacteristic::IS_SERIALIZABLE);
			SK_TYPE_ID  ( SK::Array< SK::Return< SK::Array<SK::String> > >                  , RETURNARRAYSTRING_ARRAY                                                        , "NON IISU DATA TYPE : Array< Return< Array<String> > >"                        , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const SK::Return< SK::Array<SK::String> >&                        , RETURNARRAYSTRING_CONST_REF                                                    , "NON IISU DATA TYPE : const Return< Array<String> >&"                          , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< SK::Return< SK::Array<SK::String> > >&           , RETURNARRAYSTRING_ARRAY_CONST_REF                                              , "NON IISU DATA TYPE : const Array< Return< Array<String> > >&"                 , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return< SK::Array<SK::String> > >               , RETURNARRAYSTRING_METAINFO                                                     , "METAINFO : Return< Array<String> >"                                           , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< SK::Return< SK::Array<SK::String> > > >  , RETURNARRAYSTRING_ARRAY_METAINFO                                               , "METAINFO : Array< Return< Array<String> > >"                                  , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::Return< SK::Array<SK::Vector2i> >                             , RETURNARRAYVECTOR2I                                                            , "NON IISU DATA TYPE : Return< Array<Vector2i> >"                               , TypeInfoCharacteristic::IS_SERIALIZABLE);
			SK_TYPE_ID  ( SK::Array< SK::Return< SK::Array<SK::Vector2i> > >                , RETURNARRAYVECTOR2I_ARRAY                                                      , "NON IISU DATA TYPE : Array< Return< Array<Vector2i> > >"                      , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const SK::Return< SK::Array<SK::Vector2i> >&                      , RETURNARRAYVECTOR2I_CONST_REF                                                  , "NON IISU DATA TYPE : const Return< Array<Vector2i> >&"                        , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< SK::Return< SK::Array<SK::Vector2i> > >&         , RETURNARRAYVECTOR2I_ARRAY_CONST_REF                                            , "NON IISU DATA TYPE : const Array< Return< Array<Vector2i> > >&"               , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return< SK::Array<SK::Vector2i> > >             , RETURNARRAYVECTOR2I_METAINFO                                                   , "METAINFO : Return< Array<Vector2i> >"                                         , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< SK::Return< SK::Array<SK::Vector2i> > > >          , RETURNARRAYVECTOR2I_ARRAY_METAINFO                                                       , "METAINFO : Array< Return< Array<Vector2i> > >"                                          , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::Return< SK::Array<SK::Vector2> >                                        , RETURNARRAYVECTOR2                                                                       , "NON IISU DATA TYPE : Return< Array<Vector2> >"                                          , TypeInfoCharacteristic::IS_SERIALIZABLE);
			SK_TYPE_ID  ( SK::Array< SK::Return< SK::Array<SK::Vector2> > >                           , RETURNARRAYVECTOR2_ARRAY                                                                 , "NON IISU DATA TYPE : Array< Return< Array<Vector2> > >"                                 , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const SK::Return< SK::Array<SK::Vector2> >&                                 , RETURNARRAYVECTOR2_CONST_REF                                                             , "NON IISU DATA TYPE : const Return< Array<Vector2> >&"                                   , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< SK::Return< SK::Array<SK::Vector2> > >&                    , RETURNARRAYVECTOR2_ARRAY_CONST_REF                                                       , "NON IISU DATA TYPE : const Array< Return< Array<Vector2> > >&"                          , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return< SK::Array<SK::Vector2> > >                        , RETURNARRAYVECTOR2_METAINFO                                                              , "METAINFO : Return< Array<Vector2> >"                                                    , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< SK::Return< SK::Array<SK::Vector2> > > >           , RETURNARRAYVECTOR2_ARRAY_METAINFO                                                        , "METAINFO : Array< Return< Array<Vector2> > >"                                           , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::Return<SK::Attributes>                                                  , RETURNATTRIBUTES                                                                         , "NON IISU DATA TYPE : Return<Attributes>"                                                , TypeInfoCharacteristic::IS_SERIALIZABLE);
			SK_TYPE_ID  ( SK::Array< SK::Return<SK::Attributes> >                                     , RETURNATTRIBUTES_ARRAY                                                                   , "NON IISU DATA TYPE : Array< Return<Attributes> >"                                       , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const SK::Return<SK::Attributes>&                                           , RETURNATTRIBUTES_CONST_REF                                                               , "NON IISU DATA TYPE : const Return<Attributes>&"                                         , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< SK::Return<SK::Attributes> >&                              , RETURNATTRIBUTES_ARRAY_CONST_REF                                                         , "NON IISU DATA TYPE : const Array< Return<Attributes> >&"                                , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<SK::Attributes> >                                  , RETURNATTRIBUTES_METAINFO                                                                , "METAINFO : Return<Attributes>"                                                          , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< SK::Return<SK::Attributes> > >                     , RETURNATTRIBUTES_ARRAY_METAINFO                                                          , "METAINFO : Array< Return<Attributes> >"                                                 , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::Return<bool>                                                            , RETURNBOOL                                                                               , "NON IISU DATA TYPE : Return<bool>"                                                      , TypeInfoCharacteristic::IS_SERIALIZABLE);
			SK_TYPE_ID  ( SK::Array< SK::Return<bool> >                                               , RETURNBOOL_ARRAY                                                                         , "NON IISU DATA TYPE : Array< Return<bool> >"                                             , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const SK::Return<bool>&                                                     , RETURNBOOL_CONST_REF                                                                     , "NON IISU DATA TYPE : const Return<bool>&"                                               , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< SK::Return<bool> >&                                        , RETURNBOOL_ARRAY_CONST_REF                                                               , "NON IISU DATA TYPE : const Array< Return<bool> >&"                                      , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<bool> >                                            , RETURNBOOL_METAINFO                                                                      , "METAINFO : Return<bool>"                                                                , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< SK::Return<bool> > >                               , RETURNBOOL_ARRAY_METAINFO                                                                , "METAINFO : Array< Return<bool> >"                                                       , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::Return<SK::FunctionTypeInfo>                                            , RETURNFUNCTIONTYPEINFO                                                                   , "NON IISU DATA TYPE : Return<FunctionTypeInfo>"                                          , TypeInfoCharacteristic::IS_SERIALIZABLE);
			SK_TYPE_ID  ( SK::Array< SK::Return<SK::FunctionTypeInfo> >                               , RETURNFUNCTIONTYPEINFO_ARRAY                                                             , "NON IISU DATA TYPE : Array< Return<FunctionTypeInfo> >"                                 , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const SK::Return<SK::FunctionTypeInfo>&                                     , RETURNFUNCTIONTYPEINFO_CONST_REF                                                         , "NON IISU DATA TYPE : const Return<FunctionTypeInfo>&"                                   , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< SK::Return<SK::FunctionTypeInfo> >&                        , RETURNFUNCTIONTYPEINFO_ARRAY_CONST_REF                                                   , "NON IISU DATA TYPE : const Array< Return<FunctionTypeInfo> >&"                          , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<SK::FunctionTypeInfo> >                            , RETURNFUNCTIONTYPEINFO_METAINFO                                                          , "METAINFO : Return<FunctionTypeInfo>"                                                    , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< SK::Return<SK::FunctionTypeInfo> > >               , RETURNFUNCTIONTYPEINFO_ARRAY_METAINFO                                                    , "METAINFO : Array< Return<FunctionTypeInfo> >"                                           , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::Return<int32_t>                                                         , RETURNINT32T                                                                             , "NON IISU DATA TYPE : Return<int32_t>"                                                   , TypeInfoCharacteristic::IS_SERIALIZABLE);
			SK_TYPE_ID  ( SK::Array< SK::Return<int32_t> >                                            , RETURNINT32T_ARRAY                                                                       , "NON IISU DATA TYPE : Array< Return<int32_t> >"                                          , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const SK::Return<int32_t>&                                                  , RETURNINT32T_CONST_REF                                                                   , "NON IISU DATA TYPE : const Return<int32_t>&"                                            , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< SK::Return<int32_t> >&                                     , RETURNINT32T_ARRAY_CONST_REF                                                             , "NON IISU DATA TYPE : const Array< Return<int32_t> >&"                                   , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<int32_t> >                                         , RETURNINT32T_METAINFO                                                                    , "METAINFO : Return<int32_t>"                                                             , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< SK::Return<int32_t> > >                            , RETURNINT32T_ARRAY_METAINFO                                                              , "METAINFO : Array< Return<int32_t> >"                                                    , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::Return<SK::RawData>                                                     , RETURNRAWDATA                                                                            , "NON IISU DATA TYPE : Return<RawData>"                                                   , TypeInfoCharacteristic::IS_SERIALIZABLE);
			SK_TYPE_ID  ( SK::Array< SK::Return<SK::RawData> >                                        , RETURNRAWDATA_ARRAY                                                                      , "NON IISU DATA TYPE : Array< Return<RawData> >"                                          , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const SK::Return<SK::RawData>&                                              , RETURNRAWDATA_CONST_REF                                                                  , "NON IISU DATA TYPE : const Return<RawData>&"                                            , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< SK::Return<SK::RawData> >&                                 , RETURNRAWDATA_ARRAY_CONST_REF                                                            , "NON IISU DATA TYPE : const Array< Return<RawData> >&"                                   , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<SK::RawData> >                                     , RETURNRAWDATA_METAINFO                                                                   , "METAINFO : Return<RawData>"                                                             , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< SK::Return<SK::RawData> > >                        , RETURNRAWDATA_ARRAY_METAINFO                                                             , "METAINFO : Array< Return<RawData> >"                                                    , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::Return<SK::String>                                                      , RETURNSTRING                                                                             , "NON IISU DATA TYPE : Return<String>"                                                    , TypeInfoCharacteristic::IS_SERIALIZABLE);
			SK_TYPE_ID  ( SK::Array< SK::Return<SK::String> >                                         , RETURNSTRING_ARRAY                                                                       , "NON IISU DATA TYPE : Array< Return<String> >"                                           , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const SK::Return<SK::String>&                                               , RETURNSTRING_CONST_REF                                                                   , "NON IISU DATA TYPE : const Return<String>&"                                             , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< SK::Return<SK::String> >&                                  , RETURNSTRING_ARRAY_CONST_REF                                                             , "NON IISU DATA TYPE : const Array< Return<String> >&"                                    , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<SK::String> >                                      , RETURNSTRING_METAINFO                                                                    , "METAINFO : Return<String>"                                                              , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< SK::Return<SK::String> > >                         , RETURNSTRING_ARRAY_METAINFO                                                              , "METAINFO : Array< Return<String> >"                                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::TypeInfo                                                                , TYPEINFO                                                                                 , "NON IISU DATA TYPE : TypeInfo"                                                          , TypeInfoCharacteristic::IS_SERIALIZABLE);
			SK_TYPE_ID  ( SK::Array< SK::TypeInfo >                                                   , TYPEINFO_ARRAY                                                                           , "NON IISU DATA TYPE : Array< TypeInfo >"                                                 , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const SK::TypeInfo&                                                         , TYPEINFO_CONST_REF                                                                       , "NON IISU DATA TYPE : const TypeInfo&"                                                   , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< SK::TypeInfo >&                                            , TYPEINFO_ARRAY_CONST_REF                                                                 , "NON IISU DATA TYPE : const Array< TypeInfo >&"                                          , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< SK::TypeInfo >                                                , TYPEINFO_METAINFO                                                                        , "METAINFO : TypeInfo"                                                                    , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< SK::TypeInfo > >                                   , TYPEINFO_ARRAY_METAINFO                                                                  , "METAINFO : Array< TypeInfo >"                                                           , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::Return<SK::TypeInfo>                                                    , RETURNTYPEINFO                                                                           , "NON IISU DATA TYPE : Return<TypeInfo>"                                                  , TypeInfoCharacteristic::IS_SERIALIZABLE);
			SK_TYPE_ID  ( SK::Array< SK::Return<SK::TypeInfo> >                                       , RETURNTYPEINFO_ARRAY                                                                     , "NON IISU DATA TYPE : Array< Return<TypeInfo> >"                                         , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const SK::Return<SK::TypeInfo>&                                             , RETURNTYPEINFO_CONST_REF                                                                 , "NON IISU DATA TYPE : const Return<TypeInfo>&"                                           , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< SK::Return<SK::TypeInfo> >&                                , RETURNTYPEINFO_ARRAY_CONST_REF                                                           , "NON IISU DATA TYPE : const Array< Return<TypeInfo> >&"                                  , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<SK::TypeInfo> >                                    , RETURNTYPEINFO_METAINFO                                                                  , "METAINFO : Return<TypeInfo>"                                                            , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< SK::Return<SK::TypeInfo> > >                       , RETURNTYPEINFO_ARRAY_METAINFO                                                            , "METAINFO : Array< Return<TypeInfo> >"                                                   , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::Return<SK::Vector2i>                                                    , RETURNVECTOR2I                                                                           , "NON IISU DATA TYPE : Return<Vector2i>"                                                  , TypeInfoCharacteristic::IS_SERIALIZABLE);
			SK_TYPE_ID  ( SK::Array< SK::Return<SK::Vector2i> >                                       , RETURNVECTOR2I_ARRAY                                                                     , "NON IISU DATA TYPE : Array< Return<Vector2i> >"                                         , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const SK::Return<SK::Vector2i>&                                             , RETURNVECTOR2I_CONST_REF                                                                 , "NON IISU DATA TYPE : const Return<Vector2i>&"                                           , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< SK::Return<SK::Vector2i> >&                                , RETURNVECTOR2I_ARRAY_CONST_REF                                                           , "NON IISU DATA TYPE : const Array< Return<Vector2i> >&"                                  , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<SK::Vector2i> >                                    , RETURNVECTOR2I_METAINFO                                                                  , "METAINFO : Return<Vector2i>"                                                            , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< SK::Return<SK::Vector2i> > >                       , RETURNVECTOR2I_ARRAY_METAINFO                                                            , "METAINFO : Array< Return<Vector2i> >"                                                   , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::Return<SK::Vector2>                                                     , RETURNVECTOR2                                                                            , "NON IISU DATA TYPE : Return<Vector2>"                                                   , TypeInfoCharacteristic::IS_SERIALIZABLE);
			SK_TYPE_ID  ( SK::Array< SK::Return<SK::Vector2> >                                        , RETURNVECTOR2_ARRAY                                                                      , "NON IISU DATA TYPE : Array< Return<Vector2> >"                                          , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const SK::Return<SK::Vector2>&                                              , RETURNVECTOR2_CONST_REF                                                                  , "NON IISU DATA TYPE : const Return<Vector2>&"                                            , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< SK::Return<SK::Vector2> >&                                 , RETURNVECTOR2_ARRAY_CONST_REF                                                            , "NON IISU DATA TYPE : const Array< Return<Vector2> >&"                                   , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<SK::Vector2> >                                     , RETURNVECTOR2_METAINFO                                                                   , "METAINFO : Return<Vector2>"                                                             , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< SK::Return<SK::Vector2> > >                        , RETURNVECTOR2_ARRAY_METAINFO                                                             , "METAINFO : Array< Return<Vector2> >"                                                    , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::Return<float>                                                           , RETURNFLOAT                                                                              , "NON IISU DATA TYPE : Return<float>"                                                     , TypeInfoCharacteristic::IS_SERIALIZABLE);
			SK_TYPE_ID  ( SK::Array< SK::Return<float> >                                              , RETURNFLOAT_ARRAY                                                                        , "NON IISU DATA TYPE : Array< Return<float> >"                                            , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const SK::Return<float>&                                                    , RETURNFLOAT_CONST_REF                                                                    , "NON IISU DATA TYPE : const Return<float>&"                                              , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< SK::Return<float> >&                                       , RETURNFLOAT_ARRAY_CONST_REF                                                              , "NON IISU DATA TYPE : const Array< Return<float> >&"                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<float> >                                           , RETURNFLOAT_METAINFO                                                                     , "METAINFO : Return<float>"                                                               , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< SK::Return<float> > >                              , RETURNFLOAT_ARRAY_METAINFO                                                               , "METAINFO : Array< Return<float> >"                                                      , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			IISU_TYPE_ID( bool                                                                        , BOOL                                                                                     , "IISU DATA TYPE : bool"                                                                  , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA));
			IISU_TYPE_ID( SK::Array< bool >                                                           , BOOL_ARRAY                                                                               , "IISU DATA TYPE : Array< bool >"                                                         , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const bool&                                                                 , BOOL_CONST_REF                                                                           , "NON IISU DATA TYPE : const bool&"                                                       , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< bool >&                                                    , BOOL_ARRAY_CONST_REF                                                                     , "NON IISU DATA TYPE : const Array< bool >&"                                              , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< bool >                                                        , BOOL_METAINFO                                                                            , "METAINFO : bool"                                                                        , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< bool > >                                           , BOOL_ARRAY_METAINFO                                                                      , "METAINFO : Array< bool >"                                                               , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const bool& >                                                 , BOOL_CONST_REF_METAINFO                                                                  , "METAINFO : const bool&"                                                                 , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const SK::Array< bool >& >                                    , BOOL_ARRAY_CONST_REF_METAINFO                                                            , "METAINFO : const Array< bool >&"                                                        , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			IISU_TYPE_ID( char                                                                        , CHAR                                                                                     , "IISU DATA TYPE : char"                                                                  , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA));
			IISU_TYPE_ID( SK::Array< char >                                                           , CHAR_ARRAY                                                                               , "IISU DATA TYPE : Array< char >"                                                         , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const char&                                                                 , CHAR_CONST_REF                                                                           , "NON IISU DATA TYPE : const char&"                                                       , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< char >&                                                    , CHAR_ARRAY_CONST_REF                                                                     , "NON IISU DATA TYPE : const Array< char >&"                                              , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< char >                                                        , CHAR_METAINFO                                                                            , "METAINFO : char"                                                                        , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< char > >                                           , CHAR_ARRAY_METAINFO                                                                      , "METAINFO : Array< char >"                                                               , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const char& >                                                 , CHAR_CONST_REF_METAINFO                                                                  , "METAINFO : const char&"                                                                 , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const SK::Array< char >& >                                    , CHAR_ARRAY_CONST_REF_METAINFO                                                            , "METAINFO : const Array< char >&"                                                        , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			IISU_TYPE_ID( float                                                                       , FLOAT                                                                                    , "IISU DATA TYPE : float"                                                                 , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA));
			IISU_TYPE_ID( SK::Array< float >                                                          , FLOAT_ARRAY                                                                              , "IISU DATA TYPE : Array< float >"                                                        , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const float&                                                                , FLOAT_CONST_REF                                                                          , "NON IISU DATA TYPE : const float&"                                                      , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< float >&                                                   , FLOAT_ARRAY_CONST_REF                                                                    , "NON IISU DATA TYPE : const Array< float >&"                                             , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< float >                                                       , FLOAT_METAINFO                                                                           , "METAINFO : float"                                                                       , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< float > >                                          , FLOAT_ARRAY_METAINFO                                                                     , "METAINFO : Array< float >"                                                              , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const float& >                                                , FLOAT_CONST_REF_METAINFO                                                                 , "METAINFO : const float&"                                                                , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const SK::Array< float >& >                                   , FLOAT_ARRAY_CONST_REF_METAINFO                                                           , "METAINFO : const Array< float >&"                                                       , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			IISU_TYPE_ID( int8_t                                                                      , INT8T                                                                                    , "IISU DATA TYPE : int8_t"                                                                , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA));
			IISU_TYPE_ID( SK::Array< int8_t >                                                         , INT8T_ARRAY                                                                              , "IISU DATA TYPE : Array< int8_t >"                                                       , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const int8_t&                                                               , INT8T_CONST_REF                                                                          , "NON IISU DATA TYPE : const int8_t&"                                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< int8_t >&                                                  , INT8T_ARRAY_CONST_REF                                                                    , "NON IISU DATA TYPE : const Array< int8_t >&"                                            , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< int8_t >                                                      , INT8T_METAINFO                                                                           , "METAINFO : int8_t"                                                                      , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< int8_t > >                                         , INT8T_ARRAY_METAINFO                                                                     , "METAINFO : Array< int8_t >"                                                             , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const int8_t& >                                               , INT8T_CONST_REF_METAINFO                                                                 , "METAINFO : const int8_t&"                                                               , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const SK::Array< int8_t >& >                                  , INT8T_ARRAY_CONST_REF_METAINFO                                                           , "METAINFO : const Array< int8_t >&"                                                      , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			IISU_TYPE_ID( int16_t                                                                     , INT16T                                                                                   , "IISU DATA TYPE : int16_t"                                                               , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA));
			IISU_TYPE_ID( SK::Array< int16_t >                                                        , INT16T_ARRAY                                                                             , "IISU DATA TYPE : Array< int16_t >"                                                      , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const int16_t&                                                              , INT16T_CONST_REF                                                                         , "NON IISU DATA TYPE : const int16_t&"                                                    , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< int16_t >&                                                 , INT16T_ARRAY_CONST_REF                                                                   , "NON IISU DATA TYPE : const Array< int16_t >&"                                           , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< int16_t >                                                     , INT16T_METAINFO                                                                          , "METAINFO : int16_t"                                                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< int16_t > >                                        , INT16T_ARRAY_METAINFO                                                                    , "METAINFO : Array< int16_t >"                                                            , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const int16_t& >                                              , INT16T_CONST_REF_METAINFO                                                                , "METAINFO : const int16_t&"                                                              , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const SK::Array< int16_t >& >                                 , INT16T_ARRAY_CONST_REF_METAINFO                                                          , "METAINFO : const Array< int16_t >&"                                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			IISU_TYPE_ID( int32_t                                                                     , INT32T                                                                                   , "IISU DATA TYPE : int32_t"                                                               , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA));
			IISU_TYPE_ID( SK::Array< int32_t >                                                        , INT32T_ARRAY                                                                             , "IISU DATA TYPE : Array< int32_t >"                                                      , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const int32_t&                                                              , INT32T_CONST_REF                                                                         , "NON IISU DATA TYPE : const int32_t&"                                                    , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< int32_t >&                                                 , INT32T_ARRAY_CONST_REF                                                                   , "NON IISU DATA TYPE : const Array< int32_t >&"                                           , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< int32_t >                                                     , INT32T_METAINFO                                                                          , "METAINFO : int32_t"                                                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< int32_t > >                                        , INT32T_ARRAY_METAINFO                                                                    , "METAINFO : Array< int32_t >"                                                            , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const int32_t& >                                              , INT32T_CONST_REF_METAINFO                                                                , "METAINFO : const int32_t&"                                                              , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const SK::Array< int32_t >& >                                 , INT32T_ARRAY_CONST_REF_METAINFO                                                          , "METAINFO : const Array< int32_t >&"                                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			IISU_TYPE_ID( int64_t                                                                     , INT64T                                                                                   , "IISU DATA TYPE : int64_t"                                                               , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA));
			IISU_TYPE_ID( SK::Array< int64_t >                                                        , INT64T_ARRAY                                                                             , "IISU DATA TYPE : Array< int64_t >"                                                      , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const int64_t&                                                              , INT64T_CONST_REF                                                                         , "NON IISU DATA TYPE : const int64_t&"                                                    , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< int64_t >&                                                 , INT64T_ARRAY_CONST_REF                                                                   , "NON IISU DATA TYPE : const Array< int64_t >&"                                           , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< int64_t >                                                     , INT64T_METAINFO                                                                          , "METAINFO : int64_t"                                                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< int64_t > >                                        , INT64T_ARRAY_METAINFO                                                                    , "METAINFO : Array< int64_t >"                                                            , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const int64_t& >                                              , INT64T_CONST_REF_METAINFO                                                                , "METAINFO : const int64_t&"                                                              , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const SK::Array< int64_t >& >                                 , INT64T_ARRAY_CONST_REF_METAINFO                                                          , "METAINFO : const Array< int64_t >&"                                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			IISU_TYPE_ID( uint8_t                                                                     , UINT8T                                                                                   , "IISU DATA TYPE : uint8_t"                                                               , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA));
			IISU_TYPE_ID( SK::Array< uint8_t >                                                        , UINT8T_ARRAY                                                                             , "IISU DATA TYPE : Array< uint8_t >"                                                      , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const uint8_t&                                                              , UINT8T_CONST_REF                                                                         , "NON IISU DATA TYPE : const uint8_t&"                                                    , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< uint8_t >&                                                 , UINT8T_ARRAY_CONST_REF                                                                   , "NON IISU DATA TYPE : const Array< uint8_t >&"                                           , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< uint8_t >                                                     , UINT8T_METAINFO                                                                          , "METAINFO : uint8_t"                                                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< uint8_t > >                                        , UINT8T_ARRAY_METAINFO                                                                    , "METAINFO : Array< uint8_t >"                                                            , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const uint8_t& >                                              , UINT8T_CONST_REF_METAINFO                                                                , "METAINFO : const uint8_t&"                                                              , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const SK::Array< uint8_t >& >                                 , UINT8T_ARRAY_CONST_REF_METAINFO                                                          , "METAINFO : const Array< uint8_t >&"                                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			IISU_TYPE_ID( uint16_t                                                                    , UINT16T                                                                                  , "IISU DATA TYPE : uint16_t"                                                              , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA));
			IISU_TYPE_ID( SK::Array< uint16_t >                                                       , UINT16T_ARRAY                                                                            , "IISU DATA TYPE : Array< uint16_t >"                                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const uint16_t&                                                             , UINT16T_CONST_REF                                                                        , "NON IISU DATA TYPE : const uint16_t&"                                                   , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< uint16_t >&                                                , UINT16T_ARRAY_CONST_REF                                                                  , "NON IISU DATA TYPE : const Array< uint16_t >&"                                          , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< uint16_t >                                                    , UINT16T_METAINFO                                                                         , "METAINFO : uint16_t"                                                                    , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< uint16_t > >                                       , UINT16T_ARRAY_METAINFO                                                                   , "METAINFO : Array< uint16_t >"                                                           , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const uint16_t& >                                             , UINT16T_CONST_REF_METAINFO                                                               , "METAINFO : const uint16_t&"                                                             , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const SK::Array< uint16_t >& >                                , UINT16T_ARRAY_CONST_REF_METAINFO                                                         , "METAINFO : const Array< uint16_t >&"                                                    , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			IISU_TYPE_ID( uint32_t                                                                    , UINT32T                                                                                  , "IISU DATA TYPE : uint32_t"                                                              , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA));
			IISU_TYPE_ID( SK::Array< uint32_t >                                                       , UINT32T_ARRAY                                                                            , "IISU DATA TYPE : Array< uint32_t >"                                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const uint32_t&                                                             , UINT32T_CONST_REF                                                                        , "NON IISU DATA TYPE : const uint32_t&"                                                   , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< uint32_t >&                                                , UINT32T_ARRAY_CONST_REF                                                                  , "NON IISU DATA TYPE : const Array< uint32_t >&"                                          , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< uint32_t >                                                    , UINT32T_METAINFO                                                                         , "METAINFO : uint32_t"                                                                    , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< uint32_t > >                                       , UINT32T_ARRAY_METAINFO                                                                   , "METAINFO : Array< uint32_t >"                                                           , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const uint32_t& >                                             , UINT32T_CONST_REF_METAINFO                                                               , "METAINFO : const uint32_t&"                                                             , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const SK::Array< uint32_t >& >                                , UINT32T_ARRAY_CONST_REF_METAINFO                                                         , "METAINFO : const Array< uint32_t >&"                                                    , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			IISU_TYPE_ID( uint64_t                                                                    , UINT64T                                                                                  , "IISU DATA TYPE : uint64_t"                                                              , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA));
			IISU_TYPE_ID( SK::Array< uint64_t >                                                       , UINT64T_ARRAY                                                                            , "IISU DATA TYPE : Array< uint64_t >"                                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const uint64_t&                                                             , UINT64T_CONST_REF                                                                        , "NON IISU DATA TYPE : const uint64_t&"                                                   , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< uint64_t >&                                                , UINT64T_ARRAY_CONST_REF                                                                  , "NON IISU DATA TYPE : const Array< uint64_t >&"                                          , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< uint64_t >                                                    , UINT64T_METAINFO                                                                         , "METAINFO : uint64_t"                                                                    , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< uint64_t > >                                       , UINT64T_ARRAY_METAINFO                                                                   , "METAINFO : Array< uint64_t >"                                                           , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const uint64_t& >                                             , UINT64T_CONST_REF_METAINFO                                                               , "METAINFO : const uint64_t&"                                                             , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const SK::Array< uint64_t >& >                                , UINT64T_ARRAY_CONST_REF_METAINFO                                                         , "METAINFO : const Array< uint64_t >&"                                                    , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			IISU_TYPE_ID( SK::Color4c                                                                 , COLOR4C                                                                                  , "IISU DATA TYPE : Color4c"                                                               , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA));
			IISU_TYPE_ID( SK::Array< SK::Color4c >                                                    , COLOR4C_ARRAY                                                                            , "IISU DATA TYPE : Array< Color4c >"                                                      , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const SK::Color4c&                                                          , COLOR4C_CONST_REF                                                                        , "NON IISU DATA TYPE : const Color4c&"                                                    , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< SK::Color4c >&                                             , COLOR4C_ARRAY_CONST_REF                                                                  , "NON IISU DATA TYPE : const Array< Color4c >&"                                           , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Color4c >                                                 , COLOR4C_METAINFO                                                                         , "METAINFO : Color4c"                                                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< SK::Color4c > >                                    , COLOR4C_ARRAY_METAINFO                                                                   , "METAINFO : Array< Color4c >"                                                            , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const SK::Color4c& >                                          , COLOR4C_CONST_REF_METAINFO                                                               , "METAINFO : const Color4c&"                                                              , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const SK::Array< SK::Color4c >& >                             , COLOR4C_ARRAY_CONST_REF_METAINFO                                                         , "METAINFO : const Array< Color4c >&"                                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			IISU_TYPE_ID( SK::Color4f                                                                 , COLOR4F                                                                                  , "IISU DATA TYPE : Color4f"                                                               , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA));
			IISU_TYPE_ID( SK::Array< SK::Color4f >                                                    , COLOR4F_ARRAY                                                                            , "IISU DATA TYPE : Array< Color4f >"                                                      , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const SK::Color4f&                                                          , COLOR4F_CONST_REF                                                                        , "NON IISU DATA TYPE : const Color4f&"                                                    , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< SK::Color4f >&                                             , COLOR4F_ARRAY_CONST_REF                                                                  , "NON IISU DATA TYPE : const Array< Color4f >&"                                           , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Color4f >                                                 , COLOR4F_METAINFO                                                                         , "METAINFO : Color4f"                                                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< SK::Color4f > >                                    , COLOR4F_ARRAY_METAINFO                                                                   , "METAINFO : Array< Color4f >"                                                            , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const SK::Color4f& >                                          , COLOR4F_CONST_REF_METAINFO                                                               , "METAINFO : const Color4f&"                                                              , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const SK::Array< SK::Color4f >& >                             , COLOR4F_ARRAY_CONST_REF_METAINFO                                                         , "METAINFO : const Array< Color4f >&"                                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			IISU_TYPE_ID( SK::Enum                                                                    , ENUM                                                                                     , "IISU DATA TYPE : Enum"                                                                  , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA));
			IISU_TYPE_ID( SK::Array< SK::Enum >                                                       , ENUM_ARRAY                                                                               , "IISU DATA TYPE : Array< Enum >"                                                         , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const SK::Enum&                                                             , ENUM_CONST_REF                                                                           , "NON IISU DATA TYPE : const Enum&"                                                       , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< SK::Enum >&                                                , ENUM_ARRAY_CONST_REF                                                                     , "NON IISU DATA TYPE : const Array< Enum >&"                                              , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Enum >                                                    , ENUM_METAINFO                                                                            , "METAINFO : Enum"                                                                        , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< SK::Enum > >                                       , ENUM_ARRAY_METAINFO                                                                      , "METAINFO : Array< Enum >"                                                               , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const SK::Enum& >                                             , ENUM_CONST_REF_METAINFO                                                                  , "METAINFO : const Enum&"                                                                 , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const SK::Array< SK::Enum >& >                                , ENUM_ARRAY_CONST_REF_METAINFO                                                            , "METAINFO : const Array< Enum >&"                                                        , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			IISU_TYPE_ID( SK::Frame                                                                   , FRAME                                                                                    , "IISU DATA TYPE : Frame"                                                                 , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA));
			IISU_TYPE_ID( SK::Array< SK::Frame >                                                      , FRAME_ARRAY                                                                              , "IISU DATA TYPE : Array< Frame >"                                                        , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const SK::Frame&                                                            , FRAME_CONST_REF                                                                          , "NON IISU DATA TYPE : const Frame&"                                                      , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< SK::Frame >&                                               , FRAME_ARRAY_CONST_REF                                                                    , "NON IISU DATA TYPE : const Array< Frame >&"                                             , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Frame >                                                   , FRAME_METAINFO                                                                           , "METAINFO : Frame"                                                                       , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< SK::Frame > >                                      , FRAME_ARRAY_METAINFO                                                                     , "METAINFO : Array< Frame >"                                                              , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const SK::Frame& >                                            , FRAME_CONST_REF_METAINFO                                                                 , "METAINFO : const Frame&"                                                                , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const SK::Array< SK::Frame >& >                               , FRAME_ARRAY_CONST_REF_METAINFO                                                           , "METAINFO : const Array< Frame >&"                                                       , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			IISU_TYPE_ID( SK::Image                                                                   , IMAGE                                                                                    , "IISU DATA TYPE : Image"                                                                 , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA));
			IISU_TYPE_ID( SK::Array< SK::Image >                                                      , IMAGE_ARRAY                                                                              , "IISU DATA TYPE : Array< Image >"                                                        , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const SK::Image&                                                            , IMAGE_CONST_REF                                                                          , "NON IISU DATA TYPE : const Image&"                                                      , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< SK::Image >&                                               , IMAGE_ARRAY_CONST_REF                                                                    , "NON IISU DATA TYPE : const Array< Image >&"                                             , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Image >                                                   , IMAGE_METAINFO                                                                           , "METAINFO : Image"                                                                       , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< SK::Image > >                                      , IMAGE_ARRAY_METAINFO                                                                     , "METAINFO : Array< Image >"                                                              , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const SK::Image& >                                            , IMAGE_CONST_REF_METAINFO                                                                 , "METAINFO : const Image&"                                                                , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const SK::Array< SK::Image >& >                               , IMAGE_ARRAY_CONST_REF_METAINFO                                                           , "METAINFO : const Array< Image >&"                                                       , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			IISU_TYPE_ID( SK::Matrix3                                                                 , MATRIX3                                                                                  , "IISU DATA TYPE : Matrix3"                                                               , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA));
			IISU_TYPE_ID( SK::Array< SK::Matrix3 >                                                    , MATRIX3_ARRAY                                                                            , "IISU DATA TYPE : Array< Matrix3 >"                                                      , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const SK::Matrix3&                                                          , MATRIX3_CONST_REF                                                                        , "NON IISU DATA TYPE : const Matrix3&"                                                    , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< SK::Matrix3 >&                                             , MATRIX3_ARRAY_CONST_REF                                                                  , "NON IISU DATA TYPE : const Array< Matrix3 >&"                                           , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Matrix3 >                                                 , MATRIX3_METAINFO                                                                         , "METAINFO : Matrix3"                                                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< SK::Matrix3 > >                                    , MATRIX3_ARRAY_METAINFO                                                                   , "METAINFO : Array< Matrix3 >"                                                            , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const SK::Matrix3& >                                          , MATRIX3_CONST_REF_METAINFO                                                               , "METAINFO : const Matrix3&"                                                              , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const SK::Array< SK::Matrix3 >& >                             , MATRIX3_ARRAY_CONST_REF_METAINFO                                                         , "METAINFO : const Array< Matrix3 >&"                                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			IISU_TYPE_ID( SK::Matrix4                                                                 , MATRIX4                                                                                  , "IISU DATA TYPE : Matrix4"                                                               , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA));
			IISU_TYPE_ID( SK::Array< SK::Matrix4 >                                                    , MATRIX4_ARRAY                                                                            , "IISU DATA TYPE : Array< Matrix4 >"                                                      , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const SK::Matrix4&                                                          , MATRIX4_CONST_REF                                                                        , "NON IISU DATA TYPE : const Matrix4&"                                                    , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< SK::Matrix4 >&                                             , MATRIX4_ARRAY_CONST_REF                                                                  , "NON IISU DATA TYPE : const Array< Matrix4 >&"                                           , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Matrix4 >                                                 , MATRIX4_METAINFO                                                                         , "METAINFO : Matrix4"                                                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< SK::Matrix4 > >                                    , MATRIX4_ARRAY_METAINFO                                                                   , "METAINFO : Array< Matrix4 >"                                                            , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const SK::Matrix4& >                                          , MATRIX4_CONST_REF_METAINFO                                                               , "METAINFO : const Matrix4&"                                                              , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const SK::Array< SK::Matrix4 >& >                             , MATRIX4_ARRAY_CONST_REF_METAINFO                                                         , "METAINFO : const Array< Matrix4 >&"                                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			IISU_TYPE_ID( SK::Quaternion                                                              , QUATERNION                                                                               , "IISU DATA TYPE : Quaternion"                                                            , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA));
			IISU_TYPE_ID( SK::Array< SK::Quaternion >                                                 , QUATERNION_ARRAY                                                                         , "IISU DATA TYPE : Array< Quaternion >"                                                   , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const SK::Quaternion&                                                       , QUATERNION_CONST_REF                                                                     , "NON IISU DATA TYPE : const Quaternion&"                                                 , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< SK::Quaternion >&                                          , QUATERNION_ARRAY_CONST_REF                                                               , "NON IISU DATA TYPE : const Array< Quaternion >&"                                        , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Quaternion >                                              , QUATERNION_METAINFO                                                                      , "METAINFO : Quaternion"                                                                  , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< SK::Quaternion > >                                 , QUATERNION_ARRAY_METAINFO                                                                , "METAINFO : Array< Quaternion >"                                                         , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const SK::Quaternion& >                                       , QUATERNION_CONST_REF_METAINFO                                                            , "METAINFO : const Quaternion&"                                                           , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const SK::Array< SK::Quaternion >& >                          , QUATERNION_ARRAY_CONST_REF_METAINFO                                                      , "METAINFO : const Array< Quaternion >&"                                                  , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			IISU_TYPE_ID( SK::String                                                                  , STRING                                                                                   , "IISU DATA TYPE : String"                                                                , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA));
			IISU_TYPE_ID( SK::Array< SK::String >                                                     , STRING_ARRAY                                                                             , "IISU DATA TYPE : Array< String >"                                                       , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const SK::String&                                                           , STRING_CONST_REF                                                                         , "NON IISU DATA TYPE : const String&"                                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< SK::String >&                                              , STRING_ARRAY_CONST_REF                                                                   , "NON IISU DATA TYPE : const Array< String >&"                                            , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< SK::String >                                                  , STRING_METAINFO                                                                          , "METAINFO : String"                                                                      , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< SK::String > >                                     , STRING_ARRAY_METAINFO                                                                    , "METAINFO : Array< String >"                                                             , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const SK::String& >                                           , STRING_CONST_REF_METAINFO                                                                , "METAINFO : const String&"                                                               , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const SK::Array< SK::String >& >                              , STRING_ARRAY_CONST_REF_METAINFO                                                          , "METAINFO : const Array< String >&"                                                      , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			IISU_TYPE_ID( SK::Vector2                                                                 , VECTOR2                                                                                  , "IISU DATA TYPE : Vector2"                                                               , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA));
			IISU_TYPE_ID( SK::Array< SK::Vector2 >                                                    , VECTOR2_ARRAY                                                                            , "IISU DATA TYPE : Array< Vector2 >"                                                      , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const SK::Vector2&                                                          , VECTOR2_CONST_REF                                                                        , "NON IISU DATA TYPE : const Vector2&"                                                    , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< SK::Vector2 >&                                             , VECTOR2_ARRAY_CONST_REF                                                                  , "NON IISU DATA TYPE : const Array< Vector2 >&"                                           , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Vector2 >                                                 , VECTOR2_METAINFO                                                                         , "METAINFO : Vector2"                                                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< SK::Vector2 > >                                    , VECTOR2_ARRAY_METAINFO                                                                   , "METAINFO : Array< Vector2 >"                                                            , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const SK::Vector2& >                                          , VECTOR2_CONST_REF_METAINFO                                                               , "METAINFO : const Vector2&"                                                              , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const SK::Array< SK::Vector2 >& >                             , VECTOR2_ARRAY_CONST_REF_METAINFO                                                         , "METAINFO : const Array< Vector2 >&"                                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			IISU_TYPE_ID( SK::Vector2i                                                                , VECTOR2I                                                                                 , "IISU DATA TYPE : Vector2i"                                                              , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA));
			IISU_TYPE_ID( SK::Array< SK::Vector2i >                                                   , VECTOR2I_ARRAY                                                                           , "IISU DATA TYPE : Array< Vector2i >"                                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const SK::Vector2i&                                                         , VECTOR2I_CONST_REF                                                                       , "NON IISU DATA TYPE : const Vector2i&"                                                   , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< SK::Vector2i >&                                            , VECTOR2I_ARRAY_CONST_REF                                                                 , "NON IISU DATA TYPE : const Array< Vector2i >&"                                          , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Vector2i >                                                , VECTOR2I_METAINFO                                                                        , "METAINFO : Vector2i"                                                                    , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< SK::Vector2i > >                                   , VECTOR2I_ARRAY_METAINFO                                                                  , "METAINFO : Array< Vector2i >"                                                           , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const SK::Vector2i& >                                         , VECTOR2I_CONST_REF_METAINFO                                                              , "METAINFO : const Vector2i&"                                                             , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const SK::Array< SK::Vector2i >& >                            , VECTOR2I_ARRAY_CONST_REF_METAINFO                                                        , "METAINFO : const Array< Vector2i >&"                                                    , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			IISU_TYPE_ID( SK::Vector3                                                                 , VECTOR3                                                                                  , "IISU DATA TYPE : Vector3"                                                               , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA));
			IISU_TYPE_ID( SK::Array< SK::Vector3 >                                                    , VECTOR3_ARRAY                                                                            , "IISU DATA TYPE : Array< Vector3 >"                                                      , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const SK::Vector3&                                                          , VECTOR3_CONST_REF                                                                        , "NON IISU DATA TYPE : const Vector3&"                                                    , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< SK::Vector3 >&                                             , VECTOR3_ARRAY_CONST_REF                                                                  , "NON IISU DATA TYPE : const Array< Vector3 >&"                                           , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Vector3 >                                                 , VECTOR3_METAINFO                                                                         , "METAINFO : Vector3"                                                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< SK::Vector3 > >                                    , VECTOR3_ARRAY_METAINFO                                                                   , "METAINFO : Array< Vector3 >"                                                            , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const SK::Vector3& >                                          , VECTOR3_CONST_REF_METAINFO                                                               , "METAINFO : const Vector3&"                                                              , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const SK::Array< SK::Vector3 >& >                             , VECTOR3_ARRAY_CONST_REF_METAINFO                                                         , "METAINFO : const Array< Vector3 >&"                                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			IISU_TYPE_ID( SK::Vector3i                                                                , VECTOR3I                                                                                 , "IISU DATA TYPE : Vector3i"                                                              , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA));
			IISU_TYPE_ID( SK::Array< SK::Vector3i >                                                   , VECTOR3I_ARRAY                                                                           , "IISU DATA TYPE : Array< Vector3i >"                                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const SK::Vector3i&                                                         , VECTOR3I_CONST_REF                                                                       , "NON IISU DATA TYPE : const Vector3i&"                                                   , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< SK::Vector3i >&                                            , VECTOR3I_ARRAY_CONST_REF                                                                 , "NON IISU DATA TYPE : const Array< Vector3i >&"                                          , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Vector3i >                                                , VECTOR3I_METAINFO                                                                        , "METAINFO : Vector3i"                                                                    , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< SK::Vector3i > >                                   , VECTOR3I_ARRAY_METAINFO                                                                  , "METAINFO : Array< Vector3i >"                                                           , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const SK::Vector3i& >                                         , VECTOR3I_CONST_REF_METAINFO                                                              , "METAINFO : const Vector3i&"                                                             , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const SK::Array< SK::Vector3i >& >                            , VECTOR3I_ARRAY_CONST_REF_METAINFO                                                        , "METAINFO : const Array< Vector3i >&"                                                    , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			IISU_TYPE_ID( SK::Vector4                                                                 , VECTOR4                                                                                  , "IISU DATA TYPE : Vector4"                                                               , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA));
			IISU_TYPE_ID( SK::Array< SK::Vector4 >                                                    , VECTOR4_ARRAY                                                                            , "IISU DATA TYPE : Array< Vector4 >"                                                      , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const SK::Vector4&                                                          , VECTOR4_CONST_REF                                                                        , "NON IISU DATA TYPE : const Vector4&"                                                    , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< SK::Vector4 >&                                             , VECTOR4_ARRAY_CONST_REF                                                                  , "NON IISU DATA TYPE : const Array< Vector4 >&"                                           , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Vector4 >                                                 , VECTOR4_METAINFO                                                                         , "METAINFO : Vector4"                                                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< SK::Vector4 > >                                    , VECTOR4_ARRAY_METAINFO                                                                   , "METAINFO : Array< Vector4 >"                                                            , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const SK::Vector4& >                                          , VECTOR4_CONST_REF_METAINFO                                                               , "METAINFO : const Vector4&"                                                              , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const SK::Array< SK::Vector4 >& >                             , VECTOR4_ARRAY_CONST_REF_METAINFO                                                         , "METAINFO : const Array< Vector4 >&"                                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			IISU_TYPE_ID( SK::Vertex                                                                  , VERTEX                                                                                   , "IISU DATA TYPE : Vertex"                                                                , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA));
			IISU_TYPE_ID( SK::Array< SK::Vertex >                                                     , VERTEX_ARRAY                                                                             , "IISU DATA TYPE : Array< Vertex >"                                                       , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_IISU_DATA|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( const SK::Vertex&                                                           , VERTEX_CONST_REF                                                                         , "NON IISU DATA TYPE : const Vertex&"                                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF));
			SK_TYPE_ID  ( const SK::Array< SK::Vertex >&                                              , VERTEX_ARRAY_CONST_REF                                                                   , "NON IISU DATA TYPE : const Array< Vertex >&"                                            , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_CONST_REF|TypeInfoCharacteristic::IS_ARRAY));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Vertex >                                                  , VERTEX_METAINFO                                                                          , "METAINFO : Vertex"                                                                      , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Array< SK::Vertex > >                                     , VERTEX_ARRAY_METAINFO                                                                    , "METAINFO : Array< Vertex >"                                                             , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const SK::Vertex& >                                           , VERTEX_CONST_REF_METAINFO                                                                , "METAINFO : const Vertex&"                                                               , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< const SK::Array< SK::Vertex >& >                              , VERTEX_ARRAY_CONST_REF_METAINFO                                                          , "METAINFO : const Array< Vertex >&"                                                      , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::ActivationGestureEvent                                                  , ACTIVATIONGESTUREEVENT                                                                   , "EVENT : ActivationGestureEvent"                                                         , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( const SK::ActivationGestureEvent&                                           , ACTIVATIONGESTUREEVENT_CONST_REF                                                         , "EVENT : const ActivationGestureEvent&"                                                  , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( SK::MetaInfo< SK::ActivationGestureEvent >                                  , ACTIVATIONGESTUREEVENT_METAINFO                                                          , "METAINFO : ActivationGestureEvent"                                                      , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(SK::ActivationGestureEvent) >                            , FUNCTION_VOID_ACTIVATIONGESTUREEVENT_METAINFO                                            , "METAINFO : void(ActivationGestureEvent)"                                                , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::BackgroundSnapshotResultEvent                                           , BACKGROUNDSNAPSHOTRESULTEVENT                                                            , "EVENT : BackgroundSnapshotResultEvent"                                                  , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( const SK::BackgroundSnapshotResultEvent&                                    , BACKGROUNDSNAPSHOTRESULTEVENT_CONST_REF                                                  , "EVENT : const BackgroundSnapshotResultEvent&"                                           , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( SK::MetaInfo< SK::BackgroundSnapshotResultEvent >                           , BACKGROUNDSNAPSHOTRESULTEVENT_METAINFO                                                   , "METAINFO : BackgroundSnapshotResultEvent"                                               , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(SK::BackgroundSnapshotResultEvent) >                     , FUNCTION_VOID_BACKGROUNDSNAPSHOTRESULTEVENT_METAINFO                                     , "METAINFO : void(BackgroundSnapshotResultEvent)"                                         , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::CalibrationResultEvent                                                  , CALIBRATIONRESULTEVENT                                                                   , "EVENT : CalibrationResultEvent"                                                         , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( const SK::CalibrationResultEvent&                                           , CALIBRATIONRESULTEVENT_CONST_REF                                                         , "EVENT : const CalibrationResultEvent&"                                                  , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( SK::MetaInfo< SK::CalibrationResultEvent >                                  , CALIBRATIONRESULTEVENT_METAINFO                                                          , "METAINFO : CalibrationResultEvent"                                                      , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(SK::CalibrationResultEvent) >                            , FUNCTION_VOID_CALIBRATIONRESULTEVENT_METAINFO                                            , "METAINFO : void(CalibrationResultEvent)"                                                , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::CameraDeocclusionEvent                                                  , CAMERADEOCCLUSIONEVENT                                                                   , "EVENT : CameraDeocclusionEvent"                                                         , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( const SK::CameraDeocclusionEvent&                                           , CAMERADEOCCLUSIONEVENT_CONST_REF                                                         , "EVENT : const CameraDeocclusionEvent&"                                                  , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( SK::MetaInfo< SK::CameraDeocclusionEvent >                                  , CAMERADEOCCLUSIONEVENT_METAINFO                                                          , "METAINFO : CameraDeocclusionEvent"                                                      , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(SK::CameraDeocclusionEvent) >                            , FUNCTION_VOID_CAMERADEOCCLUSIONEVENT_METAINFO                                            , "METAINFO : void(CameraDeocclusionEvent)"                                                , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::CameraOcclusionEvent                                                    , CAMERAOCCLUSIONEVENT                                                                     , "EVENT : CameraOcclusionEvent"                                                           , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( const SK::CameraOcclusionEvent&                                             , CAMERAOCCLUSIONEVENT_CONST_REF                                                           , "EVENT : const CameraOcclusionEvent&"                                                    , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( SK::MetaInfo< SK::CameraOcclusionEvent >                                    , CAMERAOCCLUSIONEVENT_METAINFO                                                            , "METAINFO : CameraOcclusionEvent"                                                        , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(SK::CameraOcclusionEvent) >                              , FUNCTION_VOID_CAMERAOCCLUSIONEVENT_METAINFO                                              , "METAINFO : void(CameraOcclusionEvent)"                                                  , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::ClickGestureEvent                                                       , CLICKGESTUREEVENT                                                                        , "EVENT : ClickGestureEvent"                                                              , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( const SK::ClickGestureEvent&                                                , CLICKGESTUREEVENT_CONST_REF                                                              , "EVENT : const ClickGestureEvent&"                                                       , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( SK::MetaInfo< SK::ClickGestureEvent >                                       , CLICKGESTUREEVENT_METAINFO                                                               , "METAINFO : ClickGestureEvent"                                                           , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(SK::ClickGestureEvent) >                                 , FUNCTION_VOID_CLICKGESTUREEVENT_METAINFO                                                 , "METAINFO : void(ClickGestureEvent)"                                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::CircleGestureEvent                                                      , CIRCLEGESTUREEVENT                                                                       , "EVENT : CircleGestureEvent"                                                             , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( const SK::CircleGestureEvent&                                               , CIRCLEGESTUREEVENT_CONST_REF                                                             , "EVENT : const CircleGestureEvent&"                                                      , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( SK::MetaInfo< SK::CircleGestureEvent >                                      , CIRCLEGESTUREEVENT_METAINFO                                                              , "METAINFO : CircleGestureEvent"                                                          , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(SK::CircleGestureEvent) >                                , FUNCTION_VOID_CIRCLEGESTUREEVENT_METAINFO                                                , "METAINFO : void(CircleGestureEvent)"                                                    , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::ControllerCreationEvent                                                 , CONTROLLERCREATIONEVENT                                                                  , "EVENT : ControllerCreationEvent"                                                        , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( const SK::ControllerCreationEvent&                                          , CONTROLLERCREATIONEVENT_CONST_REF                                                        , "EVENT : const ControllerCreationEvent&"                                                 , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( SK::MetaInfo< SK::ControllerCreationEvent >                                 , CONTROLLERCREATIONEVENT_METAINFO                                                         , "METAINFO : ControllerCreationEvent"                                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(SK::ControllerCreationEvent) >                           , FUNCTION_VOID_CONTROLLERCREATIONEVENT_METAINFO                                           , "METAINFO : void(ControllerCreationEvent)"                                               , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::ControllerDestructionEvent                                              , CONTROLLERDESTRUCTIONEVENT                                                               , "EVENT : ControllerDestructionEvent"                                                     , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( const SK::ControllerDestructionEvent&                                       , CONTROLLERDESTRUCTIONEVENT_CONST_REF                                                     , "EVENT : const ControllerDestructionEvent&"                                              , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( SK::MetaInfo< SK::ControllerDestructionEvent >                              , CONTROLLERDESTRUCTIONEVENT_METAINFO                                                      , "METAINFO : ControllerDestructionEvent"                                                  , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(SK::ControllerDestructionEvent) >                        , FUNCTION_VOID_CONTROLLERDESTRUCTIONEVENT_METAINFO                                        , "METAINFO : void(ControllerDestructionEvent)"                                            , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::DataFrameEvent                                                          , DATAFRAMEEVENT                                                                           , "EVENT : DataFrameEvent"                                                                 , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( const SK::DataFrameEvent&                                                   , DATAFRAMEEVENT_CONST_REF                                                                 , "EVENT : const DataFrameEvent&"                                                          , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( SK::MetaInfo< SK::DataFrameEvent >                                          , DATAFRAMEEVENT_METAINFO                                                                  , "METAINFO : DataFrameEvent"                                                              , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(SK::DataFrameEvent) >                                    , FUNCTION_VOID_DATAFRAMEEVENT_METAINFO                                                    , "METAINFO : void(DataFrameEvent)"                                                        , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::GenericEvent                                                            , GENERICEVENT                                                                             , "EVENT : GenericEvent"                                                                   , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( const SK::GenericEvent&                                                     , GENERICEVENT_CONST_REF                                                                   , "EVENT : const GenericEvent&"                                                            , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( SK::MetaInfo< SK::GenericEvent >                                            , GENERICEVENT_METAINFO                                                                    , "METAINFO : GenericEvent"                                                                , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(SK::GenericEvent) >                                      , FUNCTION_VOID_GENERICEVENT_METAINFO                                                      , "METAINFO : void(GenericEvent)"                                                          , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::ErrorEvent                                                              , ERROREVENT                                                                               , "EVENT : ErrorEvent"                                                                     , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( const SK::ErrorEvent&                                                       , ERROREVENT_CONST_REF                                                                     , "EVENT : const ErrorEvent&"                                                              , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( SK::MetaInfo< SK::ErrorEvent >                                              , ERROREVENT_METAINFO                                                                      , "METAINFO : ErrorEvent"                                                                  , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(SK::ErrorEvent) >                                        , FUNCTION_VOID_ERROREVENT_METAINFO                                                        , "METAINFO : void(ErrorEvent)"                                                            , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::GestureEvent                                                            , GESTUREEVENT                                                                             , "EVENT : GestureEvent"                                                                   , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( const SK::GestureEvent&                                                     , GESTUREEVENT_CONST_REF                                                                   , "EVENT : const GestureEvent&"                                                            , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( SK::MetaInfo< SK::GestureEvent >                                            , GESTUREEVENT_METAINFO                                                                    , "METAINFO : GestureEvent"                                                                , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(SK::GestureEvent) >                                      , FUNCTION_VOID_GESTUREEVENT_METAINFO                                                      , "METAINFO : void(GestureEvent)"                                                          , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::NumberGestureEvent                                                      , NUMBERGESTUREEVENT                                                                       , "EVENT : NumberGestureEvent"                                                             , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( const SK::NumberGestureEvent&                                               , NUMBERGESTUREEVENT_CONST_REF                                                             , "EVENT : const NumberGestureEvent&"                                                      , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( SK::MetaInfo< SK::NumberGestureEvent >                                      , NUMBERGESTUREEVENT_METAINFO                                                              , "METAINFO : NumberGestureEvent"                                                          , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(SK::NumberGestureEvent) >                                , FUNCTION_VOID_NUMBERGESTUREEVENT_METAINFO                                                , "METAINFO : void(NumberGestureEvent)"                                                    , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::StatusEvent                                                             , STATUSEVENT                                                                              , "EVENT : StatusEvent"                                                                    , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( const SK::StatusEvent&                                                      , STATUSEVENT_CONST_REF                                                                    , "EVENT : const StatusEvent&"                                                             , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( SK::MetaInfo< SK::StatusEvent >                                             , STATUSEVENT_METAINFO                                                                     , "METAINFO : StatusEvent"                                                                 , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(SK::StatusEvent) >                                       , FUNCTION_VOID_STATUSEVENT_METAINFO                                                       , "METAINFO : void(StatusEvent)"                                                           , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::SwipeGestureEvent                                                       , SWIPEGESTUREEVENT                                                                        , "EVENT : SwipeGestureEvent"                                                              , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( const SK::SwipeGestureEvent&                                                , SWIPEGESTUREEVENT_CONST_REF                                                              , "EVENT : const SwipeGestureEvent&"                                                       , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( SK::MetaInfo< SK::SwipeGestureEvent >                                       , SWIPEGESTUREEVENT_METAINFO                                                               , "METAINFO : SwipeGestureEvent"                                                           , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(SK::SwipeGestureEvent) >                                 , FUNCTION_VOID_SWIPEGESTUREEVENT_METAINFO                                                 , "METAINFO : void(SwipeGestureEvent)"                                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::UserActivatedEvent                                                      , USERACTIVATEDEVENT                                                                       , "EVENT : UserActivatedEvent"                                                             , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( const SK::UserActivatedEvent&                                               , USERACTIVATEDEVENT_CONST_REF                                                             , "EVENT : const UserActivatedEvent&"                                                      , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( SK::MetaInfo< SK::UserActivatedEvent >                                      , USERACTIVATEDEVENT_METAINFO                                                              , "METAINFO : UserActivatedEvent"                                                          , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(SK::UserActivatedEvent) >                                , FUNCTION_VOID_USERACTIVATEDEVENT_METAINFO                                                , "METAINFO : void(UserActivatedEvent)"                                                    , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::UserDataListUpdatedEvent                                                , USERDATALISTUPDATEDEVENT                                                                 , "EVENT : UserDataListUpdatedEvent"                                                       , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( const SK::UserDataListUpdatedEvent&                                         , USERDATALISTUPDATEDEVENT_CONST_REF                                                       , "EVENT : const UserDataListUpdatedEvent&"                                                , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( SK::MetaInfo< SK::UserDataListUpdatedEvent >                                , USERDATALISTUPDATEDEVENT_METAINFO                                                        , "METAINFO : UserDataListUpdatedEvent"                                                    , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(SK::UserDataListUpdatedEvent) >                          , FUNCTION_VOID_USERDATALISTUPDATEDEVENT_METAINFO                                          , "METAINFO : void(UserDataListUpdatedEvent)"                                              , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::UserDeactivatedEvent                                                    , USERDEACTIVATEDEVENT                                                                     , "EVENT : UserDeactivatedEvent"                                                           , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( const SK::UserDeactivatedEvent&                                             , USERDEACTIVATEDEVENT_CONST_REF                                                           , "EVENT : const UserDeactivatedEvent&"                                                    , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( SK::MetaInfo< SK::UserDeactivatedEvent >                                    , USERDEACTIVATEDEVENT_METAINFO                                                            , "METAINFO : UserDeactivatedEvent"                                                        , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(SK::UserDeactivatedEvent) >                              , FUNCTION_VOID_USERDEACTIVATEDEVENT_METAINFO                                              , "METAINFO : void(UserDeactivatedEvent)"                                                  , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::UsersStartTouchingEvent                                                 , USERSSTARTTOUCHINGEVENT                                                                  , "EVENT : UsersStartTouchingEvent"                                                        , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( const SK::UsersStartTouchingEvent&                                          , USERSSTARTTOUCHINGEVENT_CONST_REF                                                        , "EVENT : const UsersStartTouchingEvent&"                                                 , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( SK::MetaInfo< SK::UsersStartTouchingEvent >                                 , USERSSTARTTOUCHINGEVENT_METAINFO                                                         , "METAINFO : UsersStartTouchingEvent"                                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(SK::UsersStartTouchingEvent) >                           , FUNCTION_VOID_USERSSTARTTOUCHINGEVENT_METAINFO                                           , "METAINFO : void(UsersStartTouchingEvent)"                                               , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::UsersStopTouchingEvent                                                  , USERSSTOPTOUCHINGEVENT                                                                   , "EVENT : UsersStopTouchingEvent"                                                         , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( const SK::UsersStopTouchingEvent&                                           , USERSSTOPTOUCHINGEVENT_CONST_REF                                                         , "EVENT : const UsersStopTouchingEvent&"                                                  , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( SK::MetaInfo< SK::UsersStopTouchingEvent >                                  , USERSSTOPTOUCHINGEVENT_METAINFO                                                          , "METAINFO : UsersStopTouchingEvent"                                                      , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(SK::UsersStopTouchingEvent) >                            , FUNCTION_VOID_USERSSTOPTOUCHINGEVENT_METAINFO                                            , "METAINFO : void(UsersStopTouchingEvent)"                                                , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::UserStartsMovingEvent                                                   , USERSTARTSMOVINGEVENT                                                                    , "EVENT : UserStartsMovingEvent"                                                          , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( const SK::UserStartsMovingEvent&                                            , USERSTARTSMOVINGEVENT_CONST_REF                                                          , "EVENT : const UserStartsMovingEvent&"                                                   , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( SK::MetaInfo< SK::UserStartsMovingEvent >                                   , USERSTARTSMOVINGEVENT_METAINFO                                                           , "METAINFO : UserStartsMovingEvent"                                                       , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(SK::UserStartsMovingEvent) >                             , FUNCTION_VOID_USERSTARTSMOVINGEVENT_METAINFO                                             , "METAINFO : void(UserStartsMovingEvent)"                                                 , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::UserStopsMovingEvent                                                    , USERSTOPSMOVINGEVENT                                                                     , "EVENT : UserStopsMovingEvent"                                                           , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( const SK::UserStopsMovingEvent&                                             , USERSTOPSMOVINGEVENT_CONST_REF                                                           , "EVENT : const UserStopsMovingEvent&"                                                    , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( SK::MetaInfo< SK::UserStopsMovingEvent >                                    , USERSTOPSMOVINGEVENT_METAINFO                                                            , "METAINFO : UserStopsMovingEvent"                                                        , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(SK::UserStopsMovingEvent) >                              , FUNCTION_VOID_USERSTOPSMOVINGEVENT_METAINFO                                              , "METAINFO : void(UserStopsMovingEvent)"                                                  , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::UserTransferedEvent                                                     , USERTRANSFEREDEVENT                                                                      , "EVENT : UserTransferedEvent"                                                            , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( const SK::UserTransferedEvent&                                              , USERTRANSFEREDEVENT_CONST_REF                                                            , "EVENT : const UserTransferedEvent&"                                                     , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( SK::MetaInfo< SK::UserTransferedEvent >                                     , USERTRANSFEREDEVENT_METAINFO                                                             , "METAINFO : UserTransferedEvent"                                                         , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(SK::UserTransferedEvent) >                               , FUNCTION_VOID_USERTRANSFEREDEVENT_METAINFO                                               , "METAINFO : void(UserTransferedEvent)"                                                   , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::WaveGestureEvent                                                        , WAVEGESTUREEVENT                                                                         , "EVENT : WaveGestureEvent"                                                               , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( const SK::WaveGestureEvent&                                                 , WAVEGESTUREEVENT_CONST_REF                                                               , "EVENT : const WaveGestureEvent&"                                                        , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( SK::MetaInfo< SK::WaveGestureEvent >                                        , WAVEGESTUREEVENT_METAINFO                                                                , "METAINFO : WaveGestureEvent"                                                            , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(SK::WaveGestureEvent) >                                  , FUNCTION_VOID_WAVEGESTUREEVENT_METAINFO                                                  , "METAINFO : void(WaveGestureEvent)"                                                      , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( ParameterChangedEvent                                                       , PARAMETERCHANGEDEVENT                                                                    , "EVENT : ParameterChangedEvent"                                                          , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( const ParameterChangedEvent&                                                , PARAMETERCHANGEDEVENT_CONST_REF                                                          , "EVENT : const ParameterChangedEvent&"                                                   , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( SK::MetaInfo< ParameterChangedEvent >                                       , PARAMETERCHANGEDEVENT_METAINFO                                                           , "METAINFO : ParameterChangedEvent"                                                       , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(ParameterChangedEvent) >                                 , FUNCTION_VOID_PARAMETERCHANGEDEVENT_METAINFO                                             , "METAINFO : void(ParameterChangedEvent)"                                                 , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::HandPosingGestureEvent                                                  , HANDPOSINGGESTUREEVENT                                                                   , "EVENT : HandPosingGestureEvent"                                                         , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( const SK::HandPosingGestureEvent&                                           , HANDPOSINGGESTUREEVENT_CONST_REF                                                         , "EVENT : const HandPosingGestureEvent&"                                                  , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( SK::MetaInfo< SK::HandPosingGestureEvent >                                  , HANDPOSINGGESTUREEVENT_METAINFO                                                          , "METAINFO : HandPosingGestureEvent"                                                      , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(SK::HandPosingGestureEvent) >                            , FUNCTION_VOID_HANDPOSINGGESTUREEVENT_METAINFO                                            , "METAINFO : void(HandPosingGestureEvent)"                                                , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::HandActivatedEvent                                                      , HANDACTIVATEDEVENT                                                                       , "EVENT : HandActivatedEvent"                                                             , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( const SK::HandActivatedEvent&                                               , HANDACTIVATEDEVENT_CONST_REF                                                             , "EVENT : const HandActivatedEvent&"                                                      , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( SK::MetaInfo< SK::HandActivatedEvent >                                      , HANDACTIVATEDEVENT_METAINFO                                                              , "METAINFO : HandActivatedEvent"                                                          , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(SK::HandActivatedEvent) >                                , FUNCTION_VOID_HANDACTIVATEDEVENT_METAINFO                                                , "METAINFO : void(HandActivatedEvent)"                                                    , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::HandDeactivatedEvent                                                    , HANDDEACTIVATEDEVENT                                                                     , "EVENT : HandDeactivatedEvent"                                                           , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( const SK::HandDeactivatedEvent&                                             , HANDDEACTIVATEDEVENT_CONST_REF                                                           , "EVENT : const HandDeactivatedEvent&"                                                    , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( SK::MetaInfo< SK::HandDeactivatedEvent >                                    , HANDDEACTIVATEDEVENT_METAINFO                                                            , "METAINFO : HandDeactivatedEvent"                                                        , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(SK::HandDeactivatedEvent) >                              , FUNCTION_VOID_HANDDEACTIVATEDEVENT_METAINFO                                              , "METAINFO : void(HandDeactivatedEvent)"                                                  , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::HandMovingGestureEvent                                                  , HANDMOVINGGESTUREEVENT                                                                   , "EVENT : HandMovingGestureEvent"                                                         , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( const SK::HandMovingGestureEvent&                                           , HANDMOVINGGESTUREEVENT_CONST_REF                                                         , "EVENT : const HandMovingGestureEvent&"                                                  , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( SK::MetaInfo< SK::HandMovingGestureEvent >                                  , HANDMOVINGGESTUREEVENT_METAINFO                                                          , "METAINFO : HandMovingGestureEvent"                                                      , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(SK::HandMovingGestureEvent) >                            , FUNCTION_VOID_HANDMOVINGGESTUREEVENT_METAINFO                                            , "METAINFO : void(HandMovingGestureEvent)"                                                , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::CalibrationFailureEvent                                                 , CALIBRATIONFAILUREEVENT                                                                  , "EVENT : CalibrationFailureEvent"                                                        , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( const SK::CalibrationFailureEvent&                                          , CALIBRATIONFAILUREEVENT_CONST_REF                                                        , "EVENT : const CalibrationFailureEvent&"                                                 , TypeInfoCharacteristic::IS_EVENT);
			SK_TYPE_ID  ( SK::MetaInfo< SK::CalibrationFailureEvent >                                 , CALIBRATIONFAILUREEVENT_METAINFO                                                         , "METAINFO : CalibrationFailureEvent"                                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(SK::CalibrationFailureEvent) >                           , FUNCTION_VOID_CALIBRATIONFAILUREEVENT_METAINFO                                           , "METAINFO : void(CalibrationFailureEvent)"                                               , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< bool(bool) >                                                  , FUNCTION_BOOL_BOOL_METAINFO                                                              , "METAINFO : bool(bool)"                                                                  , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< bool(const SK::String&) >                                     , FUNCTION_BOOL_STRING_METAINFO                                                            , "METAINFO : bool(const String&)"                                                         , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< int32_t() >                                                   , FUNCTION_INT32T_METAINFO                                                                 , "METAINFO : int32_t()"                                                                   , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< int32_t(bool) >                                               , FUNCTION_INT32T_BOOL_METAINFO                                                            , "METAINFO : int32_t(bool)"                                                               , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< uint32_t(bool) >                                              , FUNCTION_UINT32T_BOOL_METAINFO                                                           , "METAINFO : uint32_t(bool)"                                                              , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< int32_t(const SK::String&, const SK::TypeInfo&) >             , FUNCTION_INT32T_STRING_TYPEINFO_METAINFO                                                 , "METAINFO : int32_t(const String&, const TypeInfo&)"                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return< SK::Array<SK::String> >() >                       , FUNCTION_RETURNARRAYSTRING_METAINFO                                                      , "METAINFO : Return< Array<String> >()"                                                   , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return< SK::Array<SK::String> >(const SK::String&) >      , FUNCTION_RETURNARRAYSTRING_STRING_METAINFO                                               , "METAINFO : Return< Array<String> >(const String&)"                                      , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return< SK::Array<SK::Vector2> >(const SK::String&, const SK::String&) >      , FUNCTION_RETURNARRAYVECTOR2_STRING_STRING_METAINFO                                                           , "METAINFO : Return< Array<Vector2> >(const String&, const String&)"                                          , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return< SK::Array<SK::Vector2i> >(const SK::String&, const SK::String&) >     , FUNCTION_RETURNARRAYVECTOR2I_STRING_STRING_METAINFO                                                          , "METAINFO : Return< Array<Vector2i> >(const String&, const String&)"                                         , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return< SK::Attributes>(const SK::String&) >                                  , FUNCTION_RETURNATTRIBUTES_STRING_METAINFO                                                                    , "METAINFO : Return< Attributes>(const String&)"                                                              , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<bool>(bool) >                                                          , FUNCTION_RETURNBOOL_BOOL_METAINFO                                                                            , "METAINFO : Return<bool>(bool)"                                                                              , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<bool>(int32_t) >                                                       , FUNCTION_RETURNBOOL_INT32T_METAINFO                                                                          , "METAINFO : Return<bool>(int32_t)"                                                                           , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<bool>(const SK::String&) >                                             , FUNCTION_RETURNBOOL_STRING_METAINFO                                                                          , "METAINFO : Return<bool>(const String&)"                                                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<SK::FunctionTypeInfo>(const SK::String&) >                             , FUNCTION_RETURNFUNCTIONTYPEINFO_STRING_METAINFO                                                              , "METAINFO : Return<FunctionTypeInfo>(const String&)"                                                         , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<int32_t>(const SK::String&) >                                          , FUNCTION_RETURNINT32T_STRING_METAINFO                                                                        , "METAINFO : Return<int32_t>(const String&)"                                                                  , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<int32_t>(const SK::String&, const SK::TypeInfo&) >                     , FUNCTION_RETURNINT32T_STRING_TYPEINFO_METAINFO                                                               , "METAINFO : Return<int32_t>(const String&, const TypeInfo&)"                                                 , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<int32_t>(const SK::String&, const SK::TypeInfo&, bool) >               , FUNCTION_RETURNINT32T_STRING_TYPEINFO_BOOL_METAINFO                                                          , "METAINFO : Return<int32_t>(const String&, const TypeInfo&, bool)"                                           , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<SK::RawData>(int32_t,const SK::TypeInfo &) >                           , FUNCTION_RETURNRAWDATA_INT32T_TYPEINFO_METAINFO                                                              , "METAINFO : Return<RawData>(int32_t,const TypeInfo &)"                                                       , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<SK::String>() >                                                        , FUNCTION_RETURNSTRING_METAINFO                                                                               , "METAINFO : Return<String>()"                                                                                , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<SK::String>(const SK::String&) >                                       , FUNCTION_RETURNSTRING_STRING_METAINFO                                                                        , "METAINFO : Return<String>(const String&)"                                                                   , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<void>(const SK::Array<SK::String>&,const SK::String &) >               , FUNCTION_RETURNVOID_ARRAYSTRING_STRING_METAINFO                                                              , "METAINFO : Return<void>(const Array<String>&,const String &)"                                               , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<void>(bool) >                                                          , FUNCTION_RETURNVOID_BOOL_METAINFO                                                                            , "METAINFO : Return<void>(bool)"                                                                              , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<void>(int32_t, bool) >                                                 , FUNCTION_RETURNVOID_INT32T_BOOL_METAINFO                                                                     , "METAINFO : Return<void>(int32_t, bool)"                                                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<void>(int32_t,const SK::RawData &) >                                   , FUNCTION_RETURNVOID_INT32T_RAWDATA_METAINFO                                                                  , "METAINFO : Return<void>(int32_t,const RawData &)"                                                           , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<void>(int32_t, const SK::TypeInfo&) >                                  , FUNCTION_RETURNVOID_INT32T_TYPEINFO_METAINFO                                                                 , "METAINFO : Return<void>(int32_t, const TypeInfo&)"                                                          , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<void>(int32_t) >                                                       , FUNCTION_RETURNVOID_INT32T_METAINFO                                                                          , "METAINFO : Return<void>(int32_t)"                                                                           , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<void>(const SK::String&) >                                             , FUNCTION_RETURNVOID_STRING_METAINFO                                                                          , "METAINFO : Return<void>(const String&)"                                                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<void>(const SK::String&, const SK::String&) >                          , FUNCTION_RETURNVOID_STRING_STRING_METAINFO                                                                   , "METAINFO : Return<void>(const String&, const String&)"                                                      , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<void>(const SK::String&, const SK::String&, bool) >                    , FUNCTION_RETURNVOID_STRING_STRING_BOOL_METAINFO                                                              , "METAINFO : Return<void>(const String&, const String&, bool)"                                                , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<void>(const SK::String&, const SK::String&, float) >                   , FUNCTION_RETURNVOID_STRING_STRING_FLOAT_METAINFO                                                             , "METAINFO : Return<void>(const String&, const String&, float)"                                               , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<void>(const SK::String&, const SK::String&, const SK::Vector2i &) >    , FUNCTION_RETURNVOID_STRING_STRING_VECTOR2I_METAINFO                                                          , "METAINFO : Return<void>(const String&, const String&, const Vector2i &)"                                    , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<void>(const SK::String&, const SK::String&, const SK::Vector2 &) >     , FUNCTION_RETURNVOID_STRING_STRING_VECTOR2_METAINFO                                                           , "METAINFO : Return<void>(const String&, const String&, const Vector2 &)"                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<void>(void) >                                                          , FUNCTION_RETURNVOID_VOID_METAINFO                                                                            , "METAINFO : Return<void>(void)"                                                                              , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<SK::RawData>(const SK::String &,const SK::TypeInfo &) >                , FUNCTION_RETURNRAWDATA_STRING_TYPEINFO_METAINFO                                                              , "METAINFO : Return<RawData>(const String &,const TypeInfo &)"                                                , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::String(const SK::String&) >                                                   , FUNCTION_STRING_STRING_METAINFO                                                                              , "METAINFO : String(const String&)"                                                                           , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::String(uint32_t) >                                                            , FUNCTION_STRING_UINT32T_METAINFO                                                                             , "METAINFO : String(uint32_t)"                                                                                , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::String(uint32_t, bool) >                                                      , FUNCTION_STRING_UINT32T_BOOL_METAINFO                                                                        , "METAINFO : String(uint32_t, bool)"                                                                          , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<SK::TypeInfo>(const SK::String&) >                                     , FUNCTION_RETURNTYPEINFO_STRING_METAINFO                                                                      , "METAINFO : Return<TypeInfo>(const String&)"                                                                 , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< uint32_t() >                                                                      , FUNCTION_UINT32T_METAINFO                                                                                    , "METAINFO : uint32_t()"                                                                                      , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< uint32_t(const SK::String&) >                                                     , FUNCTION_UINT32T_STRING_METAINFO                                                                             , "METAINFO : uint32_t(const String&)"                                                                         , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< uint32_t(const SK::String&, const SK::String&) >                                  , FUNCTION_UINT32T_STRING_STRING_METAINFO                                                                      , "METAINFO : uint32_t(const String&, const String&)"                                                          , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void() >                                                                          , FUNCTION_VOID_METAINFO                                                                                       , "METAINFO : void()"                                                                                          , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(bool) >                                                                      , FUNCTION_VOID_BOOL_METAINFO                                                                                  , "METAINFO : void(bool)"                                                                                      , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(int32_t) >                                                                   , FUNCTION_VOID_INT32T_METAINFO                                                                                , "METAINFO : void(int32_t)"                                                                                   , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(int32_t, int32_t) >                                                          , FUNCTION_VOID_INT32T_INT32T_METAINFO                                                                         , "METAINFO : void(int32_t, int32_t)"                                                                          , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(int32_t, const SK::Vector3&) >                                               , FUNCTION_VOID_INT32T_VECTOR3_METAINFO                                                                        , "METAINFO : void(int32_t, const Vector3&)"                                                                   , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(int8_t) >                                                                    , FUNCTION_VOID_INT8T_METAINFO                                                                                 , "METAINFO : void(int8_t)"                                                                                    , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(int8_t,int8_t) >                                                             , FUNCTION_VOID_INT8T_INT8T_METAINFO                                                                           , "METAINFO : void(int8_t,int8_t)"                                                                             , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(const SK::Enum&) >                                                           , FUNCTION_VOID_ENUM_METAINFO                                                                                  , "METAINFO : void(const Enum&)"                                                                               , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(const SK::String&, const SK::Enum&) >                                        , FUNCTION_VOID_STRING_ENUM_METAINFO                                                                           , "METAINFO : void(const String&, const Enum&)"                                                                , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(const SK::String&, const SK::Enum&, const SK::Vector3&) >                    , FUNCTION_VOID_STRING_ENUM_VECTOR3_METAINFO                                                                   , "METAINFO : void(const String&, const Enum&, const Vector3&)"                                                , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(const SK::String&, const SK::String&, bool) >                                , FUNCTION_VOID_STRING_STRING_BOOL_METAINFO                                                                    , "METAINFO : void(const String&, const String&, bool)"                                                        , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(const SK::String&, const SK::String&, const SK::Array<SK::RawData>&, const SK::FunctionTypeInfo&) >        , FUNCTION_VOID_STRING_STRING_ARRAYRAWDATA_FUNCTIONTYPEINFO_METAINFO                                                                         , "METAINFO : void(const String&, const String&, const Array<RawData>&, const FunctionTypeInfo&)"                                            , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(const SK::String&, const SK::Error&, bool) >                                                               , FUNCTION_VOID_STRING_ERROR_BOOL_METAINFO                                                                                                   , "METAINFO : void(const String&, const Error&, bool)"                                                                                       , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(const SK::String&, int32_t) >                                                                              , FUNCTION_VOID_STRING_INT32T_METAINFO                                                                                                       , "METAINFO : void(const String&, int32_t)"                                                                                                  , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(const SK::String&, int32_t, const SK::Enum&) >                                                             , FUNCTION_VOID_STRING_INT32T_ENUM_METAINFO                                                                                                  , "METAINFO : void(const String&, int32_t, const Enum&)"                                                                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(const SK::String&, int32_t, const SK::Vector3&) >                                                          , FUNCTION_VOID_STRING_INT32T_VECTOR3_METAINFO                                                                                               , "METAINFO : void(const String&, int32_t, const Vector3&)"                                                                                  , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(const SK::String&, int32_t, const SK::Vector3&, int32_t) >                                                 , FUNCTION_VOID_STRING_INT32T_VECTOR3_INT32T_METAINFO                                                                                        , "METAINFO : void(const String&, int32_t, const Vector3&, int32_t)"                                                                         , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(const SK::String&, int8_t) >                                                                               , FUNCTION_VOID_STRING_INT8T_METAINFO                                                                                                        , "METAINFO : void(const String&, int8_t)"                                                                                                   , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(const SK::String&, int8_t, int8_t) >                                                                       , FUNCTION_VOID_STRING_INT8T_INT8T_METAINFO                                                                                                  , "METAINFO : void(const String&, int8_t, int8_t)"                                                                                           , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(const SK::String&, const SK::String&) >                                                                    , FUNCTION_VOID_STRING_STRING_METAINFO                                                                                                       , "METAINFO : void(const String&, const String&)"                                                                                            , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(const SK::String&, uint32_t) >                                                                             , FUNCTION_VOID_STRING_UINT32T_METAINFO                                                                                                      , "METAINFO : void(const String&, uint32_t)"                                                                                                 , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<SK::String>(int32_t) >                                                                               , FUNCTION_RETURNSTRING_INT32T_METAINFO                                                                                                      , "METAINFO : Return<String>(int32_t)"                                                                                                       , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<int32_t>() >                                                                                         , FUNCTION_RETURNINT32T_METAINFO                                                                                                             , "METAINFO : Return<int32_t>()"                                                                                                             , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<bool>(const SK::String&, const SK::String&) >                                                        , FUNCTION_RETURNBOOL_STRING_STRING_METAINFO                                                                                                 , "METAINFO : Return<bool>(const String&, const String&)"                                                                                    , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<SK::Vector2i>(const SK::String&, const SK::String&) >                                                , FUNCTION_RETURNVECTOR2I_STRING_STRING_METAINFO                                                                                             , "METAINFO : Return<Vector2i>(const String&, const String&)"                                                                                , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<float>(const SK::String&, const SK::String&) >                                                       , FUNCTION_RETURNFLOAT_STRING_STRING_METAINFO                                                                                                , "METAINFO : Return<float>(const String&, const String&)"                                                                                   , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<SK::Vector2 >(const SK::String&, const SK::String&) >                                                , FUNCTION_RETURNVECTOR2_STRING_STRING_METAINFO                                                                                              , "METAINFO : Return<Vector2 >(const String&, const String&)"                                                                                , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(int16_t) >                                                                                                 , FUNCTION_VOID_INT16T_METAINFO                                                                                                              , "METAINFO : void(int16_t)"                                                                                                                 , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(int16_t, const SK::Vector3&) >                                                                             , FUNCTION_VOID_INT16T_VECTOR3_METAINFO                                                                                                      , "METAINFO : void(int16_t, const Vector3&)"                                                                                                 , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<void>(const SK::Enum&) >                                                                             , FUNCTION_RETURNVOID_ENUM_METAINFO                                                                                                          , "METAINFO : Return<void>(const Enum&)"                                                                                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(const SK::String&, const SK::Array<int32_t>&, const SK::Array<SK::RawData>&) >                             , FUNCTION_VOID_STRING_ARRAYINT32T_ARRAYRAWDATA_METAINFO                                                                                     , "METAINFO : void(const String&, const Array<int32_t>&, const Array<RawData>&)"                                                             , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void (const SK::Array<SK::Frame>&) >                                                                            , FUNCTION_VOID_ARRAYFRAME_METAINFO                                                                                                          , "METAINFO : void (const Array<Frame>&)"                                                                                                    , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(const SK::String&, float, const SK::Enum&, uint32_t) >                                                     , FUNCTION_VOID_STRING_FLOAT_ENUM_UINT32T_METAINFO                                                                                           , "METAINFO : void(const String&, float, const Enum&, uint32_t)"                                                                             , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(const SK::String&, const SK::Enum&, int32_t, const SK::Vector3&, const SK::Vector3&) >                     , FUNCTION_VOID_STRING_ENUM_INT32T_VECTOR3_VECTOR3_METAINFO                                                                                  , "METAINFO : void(const String&, const Enum&, int32_t, const Vector3&, const Vector3&)"                                                     , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(const SK::String&, const SK::Enum&, uint32_t) >                                                            , FUNCTION_VOID_STRING_ENUM_UINT32T_METAINFO                                                                                                 , "METAINFO : void(const String&, const Enum&, uint32_t)"                                                                                    , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< void(const SK::String&, int32_t, int32_t, uint32_t) >                                                           , FUNCTION_VOID_STRING_INT32T_INT32T_UINT32T_METAINFO                                                                                        , "METAINFO : void(const String&, int32_t, int32_t, uint32_t)"                                                                               , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<void>(uint32_t) >                                                                                    , FUNCTION_RETURNVOID_UINT32T_METAINFO                                                                                                       , "METAINFO : Return<void>(uint32_t)"                                                                                                        , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<void>(const SK::Enum&, const SK::Array<int16_t>&) >                                                  , FUNCTION_RETURNVOID_ENUM_ARRAYINT16T_METAINFO                                                                                              , "METAINFO : Return<void>(const Enum&, const Array<int16_t>&)"                                                                              , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<void>(int32_t, const SK::Vector3&) >                                                                 , FUNCTION_RETURNVOID_INT32T_VECTOR3_METAINFO                                                                                                , "METAINFO : Return<void>(int32_t, const Vector3&)"                                                                                         , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));
			SK_TYPE_ID  ( SK::MetaInfo< SK::Return<void>(int16_t) >                                                                                     , FUNCTION_RETURNVOID_INT16T_METAINFO                                                                                                        , "METAINFO : Return<void>(int16_t)"                                                                                                         , (TypeInfoCharacteristic::Type)(TypeInfoCharacteristic::IS_SERIALIZABLE|TypeInfoCharacteristic::IS_METAINFO));

 
 	}	

}

